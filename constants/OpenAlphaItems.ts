import { ALL_POC_ITEM_MAP } from '@/lib/constants';
import {
  IItemCategoryEnum,
  IItemConfig,
  IItemKey,
  IItemSubCategoryEnum,
} from '@/types/item';

import { itemValidationSchemas } from './itemSchemas';
import { ALL_METRICS } from './metrics';

export const alphaItemConfig: Partial<Record<IItemKey, IItemConfig<IItemKey>>> =
  {
    advisors: {
      key: 'advisors',
      category: IItemCategoryEnum.Organization,
      subCategory: IItemSubCategoryEnum.Team,
      isEssential: false,
      label: 'Advisors',
      description: 'who are the official advisors',
      shortDescription: 'who are the official advisors',
      longDescription: 'Provide detailed context for Advisors.',
      weight: ALL_POC_ITEM_MAP['advisors'].weight,
      formDisplayType: 'advisors',
      placeholder: 'Use the embedded table to add entries',
      showReference: true,
      showExpand: true,
      accountability: [ALL_METRICS.PARTICIPATION, ALL_METRICS.TRANSPARENCY],
      legitimacy: [ALL_METRICS.COMMUNITY_ACCEPTANCE],
      // TODO: add validation schema
    },
    // TODO: Potential duplicate with existing AllItemConfig
    token_type: {
      key: 'token_type',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Token Type (Token) +',
      description:
        "The token type is fundamental to understand a Project's spectrum, from financial viability to community engagement and impact status.",
      shortDescription:
        "The token type is fundamental to understand a Project's spectrum, from financial viability to community engagement and impact status.",
      longDescription: 'Provide detailed context for Token Type (Token) +.',
      weight: ALL_POC_ITEM_MAP['token_type'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION, ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      options: [
        { value: 'Access Token', label: 'Access Token' },
        { value: 'Governance Token', label: 'Governance Token' },
        {
          value: 'Store of Value / Currency Token',
          label: 'Store of Value / Currency Token',
        },
        {
          value: 'Incentive / Reward Token',
          label: 'Incentive / Reward Token',
        },
        {
          value: 'Identity / Reputation Token',
          label: 'Identity / Reputation Token',
        },
        { value: 'Asset-Backed Token', label: 'Asset-Backed Token' },
        {
          value: 'NFT (Non-Fungible Token)',
          label: 'NFT (Non-Fungible Token)',
        },
        {
          value: 'Hybrid / Multi-Role Token',
          label: 'Hybrid / Multi-Role Token',
        },
      ],
      validationSchema: itemValidationSchemas.token_type,
    },
    contributors: {
      key: 'contributors',
      category: IItemCategoryEnum.Organization,
      subCategory: IItemSubCategoryEnum.Organization,
      isEssential: false,
      label: 'Contributors (what is this one different from other team items)',
      description:
        'an employee, researcher, assistant, project participant, a person contributing to the emergence, an author is a person who performs his activities as part of some larger project.',
      shortDescription:
        'an employee, researcher, assistant, project participant, a person contributing to the emergence, an author is a person who performs his activities as part of some larger project.',
      longDescription:
        'Provide detailed context for Contributors (what is this one different from other team items).',
      weight: ALL_POC_ITEM_MAP['contributors'].weight,
      formDisplayType: 'embedTable',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION, ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    contributors_organization: {
      key: 'contributors_organization',
      category: IItemCategoryEnum.Organization,
      subCategory: IItemSubCategoryEnum.Organization,
      isEssential: false,
      label:
        'Contributors + (present/past)(table w: name, address, social identifiers - either or)) (starting date)',
      description:
        "List contributors as those who contribute to a project in varying capacity however are not part of the project's core team.",
      shortDescription:
        "List contributors as those who contribute to a project in varying capacity however are not part of the project's core team.",
      longDescription:
        'Provide detailed context for Contributors + (present/past)(table w: name, address, social identifiers - either or)) (starting date).',
      weight: ALL_POC_ITEM_MAP['contributors_organization'].weight,
      formDisplayType: 'contributors_organization',
      placeholder: 'Use the embedded table to add entries',
      showReference: true,
      showExpand: true,
      accountability: [ALL_METRICS.PARTICIPATION, ALL_METRICS.TRANSPARENCY],
      legitimacy: [
        ALL_METRICS.LEGITIMACY_BY_PROCESS,
        ALL_METRICS.LEGITIMACY_BY_CONTINUITY,
        ALL_METRICS.LEGITIMACY_BY_PERFORMANCE,
        ALL_METRICS.WEB3_RESILIENCE,
      ],
      // TODO: add validation schema
    },
    audit_status_duplicate: {
      key: 'audit_status_duplicate',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Audit Status + [DUPLICATE?]',
      description:
        'This shows if a project at any level has been audited. Below will include the details of their audits.',
      shortDescription:
        'This shows if a project at any level has been audited. Below will include the details of their audits.',
      longDescription:
        'Provide detailed context for Audit Status + [DUPLICATE?].',
      weight: ALL_POC_ITEM_MAP['audit_status_duplicate'].weight,
      formDisplayType: 'textarea',
      placeholder: 'Provide a detailed explanation',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    endorsers: {
      key: 'endorsers',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Endorsers',
      description: 'someone who expresses strong approval',
      shortDescription: 'someone who expresses strong approval',
      longDescription: 'Provide detailed context for Endorsers.',
      weight: ALL_POC_ITEM_MAP['endorsers'].weight,
      formDisplayType: 'embedTable',
      placeholder: 'Use the embedded table to add entries',
      showReference: true,
      showExpand: true,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.COMMUNITY_ACCEPTANCE],
      // TODO: add validation schema
    },
    constitution: {
      key: 'constitution',
      category: IItemCategoryEnum.Governance,
      subCategory: IItemSubCategoryEnum.Governance,
      isEssential: false,
      label: 'Constitution +',
      description:
        'Is there a constitution (or something close) of this project/org',
      shortDescription:
        'Is there a constitution (or something close) of this project/org',
      longDescription: 'Provide detailed context for Constitution +.',
      weight: ALL_POC_ITEM_MAP['constitution'].weight,
      formDisplayType: 'string',
      placeholder: 'Enter details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    milestone_type: {
      key: 'milestone_type',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Milestone Type (in Milestone)',
      description:
        '1. Project approval.2. Completing critical tasks.3. Reaching project goals and objectives.4. Project completion.etc.',
      shortDescription:
        '1. Project approval.2. Completing critical tasks.3. Reaching project goals and objectives.4. Project completion.etc.',
      longDescription:
        'Provide detailed context for Milestone Type (in Milestone).',
      weight: ALL_POC_ITEM_MAP['milestone_type'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PERFORMANCE],
      // TODO: add validation schema
    },
    software_license: {
      key: 'software_license',
      category: IItemCategoryEnum.Technicals,
      subCategory: IItemSubCategoryEnum.Development,
      isEssential: false,
      label: 'Software License:',
      description:
        'Open Source or Proprietary Software Licenses (Closed Source)',
      shortDescription:
        'Open Source or Proprietary Software Licenses (Closed Source)',
      longDescription: 'Provide detailed context for Software License:.',
      weight: ALL_POC_ITEM_MAP['software_license'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    roadmap_timeline: {
      key: 'roadmap_timeline',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Roadmap Timeline +',
      description:
        "This is a tool for visualizing the project's development strategy.",
      shortDescription:
        "This is a tool for visualizing the project's development strategy.",
      longDescription: 'Provide detailed context for Roadmap Timeline +.',
      weight: ALL_POC_ITEM_MAP['roadmap_timeline'].weight,
      formDisplayType: 'embedTable',
      placeholder: 'Use the embedded table to add entries',
      showReference: true,
      showExpand: true,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [
        ALL_METRICS.LEGITIMACY_BY_CONTINUITY,
        ALL_METRICS.LEGITIMACY_BY_PERFORMANCE,
        ALL_METRICS.WEB3_RESILIENCE,
      ],
      // TODO: add validation schema
    },
    // TODO: Potential duplicate with existing AllItemConfig
    core_team: {
      key: 'core_team',
      category: IItemCategoryEnum.Organization,
      subCategory: IItemSubCategoryEnum.Organization,
      isEssential: false,
      label: 'Core Team + (tag: present/past)',
      description: "This item details a project's core team members.",
      shortDescription: "This item details a project's core team members.",
      longDescription:
        'Provide detailed context for Core Team + (tag: present/past).',
      weight: ALL_POC_ITEM_MAP['core_team'].weight,
      formDisplayType: 'embedTable',
      placeholder: 'Use the embedded table to add entries',
      showReference: true,
      showExpand: true,
      accountability: [ALL_METRICS.PARTICIPATION, ALL_METRICS.TRANSPARENCY],
      legitimacy: [
        ALL_METRICS.LEGITIMACY_BY_CONTINUITY,
        ALL_METRICS.LEGITIMACY_BY_PERFORMANCE,
        ALL_METRICS.WEB3_RESILIENCE,
        ALL_METRICS.LEGITIMACY_BY_PROCESS,
      ],
      validationSchema: itemValidationSchemas.core_team,
    },
    // TODO: Potential duplicate with existing AllItemConfig
    launch_plan: {
      key: 'launch_plan',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Launch Plan +',
      description: 'How and when do you intend to Start the Project',
      shortDescription: 'How and when do you intend to Start the Project',
      longDescription: 'Provide detailed context for Launch Plan +.',
      weight: ALL_POC_ITEM_MAP['launch_plan'].weight,
      formDisplayType: 'textarea',
      placeholder: 'Provide a detailed explanation',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PERFORMANCE],
      validationSchema: itemValidationSchemas.launch_plan,
    },
    airdrops: {
      key: 'airdrops',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Airdrops +',
      description:
        "whether project had free distribution of coins of a project. or there's a live airdrop happening?",
      shortDescription:
        "whether project had free distribution of coins of a project. or there's a live airdrop happening?",
      longDescription: 'Provide detailed context for Airdrops +.',
      weight: ALL_POC_ITEM_MAP['airdrops'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION, ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    team_location: {
      key: 'team_location',
      category: IItemCategoryEnum.Organization,
      subCategory: IItemSubCategoryEnum.Organization,
      isEssential: false,
      label: 'Team Location',
      description: 'whereabouts of the founders',
      shortDescription: 'whereabouts of the founders',
      longDescription: 'Provide detailed context for Team Location.',
      weight: ALL_POC_ITEM_MAP['team_location'].weight,
      formDisplayType: 'selectMultiple',
      placeholder: 'Select applicable options',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION, ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    ownership_of_projects: {
      key: 'ownership_of_projects',
      category: IItemCategoryEnum.Organization,
      subCategory: IItemSubCategoryEnum.Organization,
      isEssential: false,
      label: 'Ownership of Projects +',
      description:
        "the individuals or groups who have authority, accountability, and decision-making power over the project's direction, scope, and outcomes",
      shortDescription:
        "the individuals or groups who have authority, accountability, and decision-making power over the project's direction, scope, and outcomes",
      longDescription: 'Provide detailed context for Ownership of Projects +.',
      weight: ALL_POC_ITEM_MAP['ownership_of_projects'].weight,
      formDisplayType: 'string',
      placeholder: 'Enter details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [],
      // TODO: add validation schema
    },
    smart_contract_audits: {
      key: 'smart_contract_audits',
      category: IItemCategoryEnum.Technicals,
      subCategory: IItemSubCategoryEnum.Development,
      isEssential: false,
      label: 'Smart Contract Audits',
      description: "Were the project's smart contract audited?",
      shortDescription: "Were the project's smart contract audited?",
      longDescription: 'Provide detailed context for Smart Contract Audits.',
      weight: ALL_POC_ITEM_MAP['smart_contract_audits'].weight,
      formDisplayType: 'embedTable',
      placeholder: 'Use the embedded table to add entries',
      showReference: true,
      showExpand: true,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    token_benefits: {
      key: 'token_benefits',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Token Benefits (Finance)',
      description: 'What are the benefits a token allows',
      shortDescription: 'What are the benefits a token allows',
      longDescription: 'Provide detailed context for Token Benefits (Finance).',
      weight: ALL_POC_ITEM_MAP['token_benefits'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    token_risks: {
      key: 'token_risks',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Token Risks',
      description: 'Risk analysis in web3 and meatspace',
      shortDescription: 'Risk analysis in web3 and meatspace',
      longDescription: 'Provide detailed context for Token Risks.',
      weight: ALL_POC_ITEM_MAP['token_risks'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    token_rights: {
      key: 'token_rights',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Token Rights (Governance)',
      description: 'Voting rights the token allows',
      shortDescription: 'Voting rights the token allows',
      longDescription:
        'Provide detailed context for Token Rights (Governance).',
      weight: ALL_POC_ITEM_MAP['token_rights'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    token_obligations: {
      key: 'token_obligations',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Token Obligations',
      description: 'Obligations the participants have by owning the token',
      shortDescription: 'Obligations the participants have by owning the token',
      longDescription: 'Provide detailed context for Token Obligations.',
      weight: ALL_POC_ITEM_MAP['token_obligations'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    dapp_storage_stack: {
      key: 'dapp_storage_stack',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Dapp storage stack (Nov, 2022)',
      description: 'Where is the project data stored?',
      shortDescription: 'Where is the project data stored?',
      longDescription:
        'Provide detailed context for Dapp storage stack (Nov, 2022).',
      weight: ALL_POC_ITEM_MAP['dapp_storage_stack'].weight,
      formDisplayType: 'string',
      placeholder: 'Enter details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    dapp_account_management_stack: {
      key: 'dapp_account_management_stack',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Dapp Account Management(i.e ID) stack (Nov, 2022)',
      description: 'How is the User Index managed on the dapp?',
      shortDescription: 'How is the User Index managed on the dapp?',
      longDescription:
        'Provide detailed context for Dapp Account Management(i.e ID) stack (Nov, 2022).',
      weight: ALL_POC_ITEM_MAP['dapp_account_management_stack'].weight,
      formDisplayType: 'string',
      placeholder: 'Enter details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    dapp_logic_program_stack: {
      key: 'dapp_logic_program_stack',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Dapp logic/program stack (Nov, 2022)\\',
      description: "Where lies the project's backend?",
      shortDescription: "Where lies the project's backend?",
      longDescription:
        'Provide detailed context for Dapp logic/program stack (Nov, 2022)\\.',
      weight: ALL_POC_ITEM_MAP['dapp_logic_program_stack'].weight,
      formDisplayType: 'string',
      placeholder: 'Enter details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    user_data_storage_stack: {
      key: 'user_data_storage_stack',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'User Data (Dapp) storage stack (Nov, 2022)',
      description: 'Specifies where and how your project stores user data.',
      shortDescription:
        'Specifies where and how your project stores user data.',
      longDescription:
        'Provide detailed context for User Data (Dapp) storage stack (Nov, 2022).',
      weight: ALL_POC_ITEM_MAP['user_data_storage_stack'].weight,
      formDisplayType: 'string',
      placeholder: 'Enter details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    unique_value_proposition: {
      key: 'unique_value_proposition',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Unique Value Proposition',
      description: 'What makes your project stand out from others?',
      shortDescription: 'What makes your project stand out from others?',
      longDescription: 'Provide detailed context for Unique Value Proposition.',
      weight: ALL_POC_ITEM_MAP['unique_value_proposition'].weight,
      formDisplayType: 'string',
      placeholder: 'Enter details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [],
      // TODO: add validation schema
    },
    audit_report: {
      key: 'audit_report',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Audit Report',
      description:
        'data analysis, investigation, detection and prevention of crimes and illegal transactions in the networks of cryptocurrency and blockchain companies.',
      shortDescription:
        'data analysis, investigation, detection and prevention of crimes and illegal transactions in the networks of cryptocurrency and blockchain companies.',
      longDescription: 'Provide detailed context for Audit Report.',
      weight: ALL_POC_ITEM_MAP['audit_report'].weight,
      formDisplayType: 'string',
      placeholder: 'Enter details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    vault_address_step2: {
      key: 'vault_address_step2',
      category: IItemCategoryEnum.Governance,
      subCategory: IItemSubCategoryEnum.Governance,
      isEssential: false,
      label: 'Vault (treasury) Address + step2',
      description:
        'The vault address is meant to present the smart contract address where the treasury stored and also the people having the authority to get/approve the access to this address.',
      shortDescription:
        'The vault address is meant to present the smart contract address where the treasury stored and also the people having the authority to get/approve the access to this address.',
      longDescription:
        'Provide detailed context for Vault (treasury) Address + step2.',
      weight: ALL_POC_ITEM_MAP['vault_address_step2'].weight,
      formDisplayType: 'smartContract',
      placeholder: '0x...',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    previous_funding_rounds: {
      key: 'previous_funding_rounds',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Previous Funding Rounds',
      description: 'List of previous successful funding rounds of the project',
      shortDescription:
        'List of previous successful funding rounds of the project',
      longDescription: 'Provide detailed context for Previous Funding Rounds.',
      weight: ALL_POC_ITEM_MAP['previous_funding_rounds'].weight,
      formDisplayType: 'link',
      placeholder: 'https://example.com',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [
        ALL_METRICS.LEGITIMACY_BY_CONTINUITY,
        ALL_METRICS.LEGITIMACY_BY_PERFORMANCE,
        ALL_METRICS.WEB3_RESILIENCE,
      ],
      // TODO: add validation schema
    },
    milestone: {
      key: 'milestone',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Milestone + (achieved or not, an entry in roadmap)',
      description: 'Designating the intermediate stage of project development.',
      shortDescription:
        'Designating the intermediate stage of project development.',
      longDescription:
        'Provide detailed context for Milestone + (achieved or not, an entry in roadmap).',
      weight: ALL_POC_ITEM_MAP['milestone'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [
        ALL_METRICS.LEGITIMACY_BY_CONTINUITY,
        ALL_METRICS.LEGITIMACY_BY_PERFORMANCE,
        ALL_METRICS.WEB3_RESILIENCE,
      ],
      // TODO: add validation schema
    },
    vault_multi_sig_holder_addresses_step2: {
      key: 'vault_multi_sig_holder_addresses_step2',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Vault (treasury) Multi-sig  Holder Addresses + step2',
      description: 'Table of Keyholders.',
      shortDescription: 'Table of Keyholders.',
      longDescription:
        'Provide detailed context for Vault (treasury) Multi-sig  Holder Addresses + step2.',
      weight: ALL_POC_ITEM_MAP['vault_multi_sig_holder_addresses_step2'].weight,
      formDisplayType: 'link',
      placeholder: 'https://example.com',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    on_chain_treasury_step1: {
      key: 'on_chain_treasury_step1',
      category: IItemCategoryEnum.Governance,
      subCategory: IItemSubCategoryEnum.Governance,
      isEssential: false,
      label: 'On-chain Treasury (yes/no) step1',
      description:
        'The Treasury is a pot of funds collected through a portion of block production rewards, transaction fees, slashing, staking inefficiencies, etc.',
      shortDescription:
        'The Treasury is a pot of funds collected through a portion of block production rewards, transaction fees, slashing, staking inefficiencies, etc.',
      longDescription:
        'Provide detailed context for On-chain Treasury (yes/no) step1.',
      weight: ALL_POC_ITEM_MAP['on_chain_treasury_step1'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION, ALL_METRICS.TRANSPARENCY],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    // TODO: Potential duplicate with existing AllItemConfig
    budget_plans: {
      key: 'budget_plans',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Budget Plans +',
      description:
        'Outlines expected income and expenses over a defined time period.',
      shortDescription:
        'Outlines expected income and expenses over a defined time period.',
      longDescription: 'Provide detailed context for Budget Plans +.',
      weight: ALL_POC_ITEM_MAP['budget_plans'].weight,
      formDisplayType: 'link',
      placeholder: 'https://example.com',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [],
      validationSchema: itemValidationSchemas.budget_plans,
    },
    private_funding_rounds: {
      key: 'private_funding_rounds',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Private Funding Rounds',
      description:
        'Includes the data: date, fundraising size, participants, price, smart contract address',
      shortDescription:
        'Includes the data: date, fundraising size, participants, price, smart contract address',
      longDescription: 'Provide detailed context for Private Funding Rounds.',
      weight: ALL_POC_ITEM_MAP['private_funding_rounds'].weight,
      formDisplayType: 'embedTable',
      placeholder: 'Use the embedded table to add entries',
      showReference: true,
      showExpand: true,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    // TODO: Potential duplicate with existing AllItemConfig
    token_sales: {
      key: 'token_sales',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label:
        'Token Sales (public sale e.g. ICO) (name of item can be sensitive)',
      description:
        'Details the public token sale, including timeline, funding goals, participation, and contract address.',
      shortDescription:
        'Details the public token sale, including timeline, funding goals, participation, and contract address.',
      longDescription:
        'Provide detailed context for Token Sales (public sale e.g. ICO) (name of item can be sensitive).',
      weight: ALL_POC_ITEM_MAP['token_sales'].weight,
      formDisplayType: 'embedTable',
      placeholder: 'Use the embedded table to add entries',
      showReference: true,
      showExpand: true,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      validationSchema: itemValidationSchemas.token_sales,
    },
    decentralised_governance: {
      key: 'decentralised_governance',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Decentralised Governance',
      description:
        'An added layer of security by requiring more than one key to authorize a transaction/decision in governance',
      shortDescription:
        'An added layer of security by requiring more than one key to authorize a transaction/decision in governance',
      longDescription: 'Provide detailed context for Decentralised Governance.',
      weight: ALL_POC_ITEM_MAP['decentralised_governance'].weight,
      formDisplayType: 'embedTable',
      placeholder: 'Use the embedded table to add entries',
      showReference: true,
      showExpand: true,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    locking_period_team: {
      key: 'locking_period_team',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Locking Period [team] +',
      description:
        'a pre-planned span of time, usually following a token sale when token holders of a cryptocurrency project are prohibited from selling their tokens.',
      shortDescription:
        'a pre-planned span of time, usually following a token sale when token holders of a cryptocurrency project are prohibited from selling their tokens.',
      longDescription: 'Provide detailed context for Locking Period [team] +.',
      weight: ALL_POC_ITEM_MAP['locking_period_team'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    token_utility: {
      key: 'token_utility',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Token Utility',
      description:
        'Describe what the token is used for within the Project - whether it unlocks access, enables governance, rewards users, supports financial activity, or serves another function. Choose all that apply based on current utility (not future plans).',
      shortDescription:
        'Describe what the token is used for within the Project - whether it unlocks access, enables governance, rewards users, supports financial activity, or serves another function. Choose all that apply based on current utility (not future plans).',
      longDescription: 'Provide detailed context for Token Utility.',
      weight: ALL_POC_ITEM_MAP['token_utility'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      options: [
        { value: 'Access & Payments', label: 'Access & Payments' },
        { value: 'Governance & Rights', label: 'Governance & Rights' },
        { value: 'Incentives & Rewards', label: 'Incentives & Rewards' },
        { value: 'Financial Function', label: 'Financial Function' },
        { value: 'Identity & Reputation', label: 'Identity & Reputation' },
        { value: 'None/Not yet)', label: 'None/Not yet)' },
      ],
      // TODO: add validation schema
    },
    board_incentive: {
      key: 'board_incentive',
      category: IItemCategoryEnum.Governance,
      subCategory: IItemSubCategoryEnum.Governance,
      isEssential: false,
      label: 'Board Incentive',
      description: 'Some sort of token/stock based compensation',
      shortDescription: 'Some sort of token/stock based compensation',
      longDescription: 'Provide detailed context for Board Incentive.',
      weight: ALL_POC_ITEM_MAP['board_incentive'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [],
      // TODO: add validation schema
    },
    // TODO: Potential duplicate with existing AllItemConfig
    treasury_mechanism: {
      key: 'treasury_mechanism',
      category: IItemCategoryEnum.Governance,
      subCategory: IItemSubCategoryEnum.Governance,
      isEssential: false,
      label: 'Treasury Mechanism +',
      description:
        'a community controlled and decentralized collaborative decision-making mechanism for sustainable funding of the underlying blockchain development and maintenance.',
      shortDescription:
        'a community controlled and decentralized collaborative decision-making mechanism for sustainable funding of the underlying blockchain development and maintenance.',
      longDescription: 'Provide detailed context for Treasury Mechanism +.',
      weight: ALL_POC_ITEM_MAP['treasury_mechanism'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [],
      validationSchema: itemValidationSchemas.treasury_mechanism,
    },
    blockchain_explorer: {
      key: 'blockchain_explorer',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Blockchain Explorer',
      description:
        'Where can the community can find more block data of the project? e.g. Etherscan. S: yeah that would be the list for explorers based on which blockchains they are on',
      shortDescription:
        'Where can the community can find more block data of the project? e.g. Etherscan. S: yeah that would be the list for explorers based on which blockchains they are on',
      longDescription: 'Provide detailed context for Blockchain Explorer.',
      weight: ALL_POC_ITEM_MAP['blockchain_explorer'].weight,
      formDisplayType: 'link',
      placeholder: 'https://example.com',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [
        ALL_METRICS.LEGITIMACY_BY_PROCESS,
        ALL_METRICS.COMMUNITY_ACCEPTANCE,
      ],
      // TODO: add validation schema
    },
    motion_types: {
      key: 'motion_types',
      category: IItemCategoryEnum.Governance,
      subCategory: IItemSubCategoryEnum.Governance,
      isEssential: false,
      label: 'Motion Types:',
      description: 'Provide key information about Motion Types:.',
      shortDescription: '',
      longDescription: 'Provide detailed context for Motion Types:.',
      weight: ALL_POC_ITEM_MAP['motion_types'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [],
      // TODO: add validation schema
    },
    // TODO: Potential duplicate with existing AllItemConfig
    dapp_category: {
      key: 'dapp_category',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Dapp Category +',
      description:
        "State if the Project's nature is 1. Financial 2. Partly Financial 3.Non Financial",
      shortDescription:
        "State if the Project's nature is 1. Financial 2. Partly Financial 3.Non Financial",
      longDescription: 'Provide detailed context for Dapp Category +.',
      weight: ALL_POC_ITEM_MAP['dapp_category'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      options: [
        { value: 'Financial', label: 'Financial' },
        { value: 'Partly Financial', label: 'Partly Financial' },
        { value: 'Non Financial', label: 'Non Financial' },
      ],
      validationSchema: itemValidationSchemas.dapp_category,
    },
    board_members: {
      key: 'board_members',
      category: IItemCategoryEnum.Governance,
      subCategory: IItemSubCategoryEnum.Governance,
      isEssential: false,
      label: 'Board Members',
      description: 'A board member is an elected community member.',
      shortDescription: 'A board member is an elected community member.',
      longDescription: 'Provide detailed context for Board Members.',
      weight: ALL_POC_ITEM_MAP['board_members'].weight,
      formDisplayType: 'smartContract',
      placeholder: '0x...',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [],
      // TODO: add validation schema
    },
    total_votes: {
      key: 'total_votes',
      category: IItemCategoryEnum.Organization,
      subCategory: IItemSubCategoryEnum.Organization,
      isEssential: false,
      label: 'Total Votes(ers)',
      description: 'Provide key information about Total Votes(ers).',
      shortDescription: '',
      longDescription: 'Provide detailed context for Total Votes(ers).',
      weight: ALL_POC_ITEM_MAP['total_votes'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [],
      // TODO: add validation schema
    },
    total_motion_types: {
      key: 'total_motion_types',
      category: IItemCategoryEnum.Organization,
      subCategory: IItemSubCategoryEnum.Organization,
      isEssential: false,
      label: 'Total Motion Types:',
      description: 'Provide key information about Total Motion Types:.',
      shortDescription: '',
      longDescription: 'Provide detailed context for Total Motion Types:.',
      weight: ALL_POC_ITEM_MAP['total_motion_types'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [],
      // TODO: add validation schema
    },
    dao_source_code: {
      key: 'dao_source_code',
      category: IItemCategoryEnum.Governance,
      subCategory: IItemSubCategoryEnum.Governance,
      isEssential: false,
      label: 'DAO Source Code',
      description: 'Provide key information about DAO Source Code.',
      shortDescription: '',
      longDescription: 'Provide detailed context for DAO Source Code.',
      weight: ALL_POC_ITEM_MAP['dao_source_code'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    followers: {
      key: 'followers',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Followers (ecf page?)',
      description:
        'One who has a strong interest or pays close attention to a project.',
      shortDescription:
        'One who has a strong interest or pays close attention to a project.',
      longDescription: 'Provide detailed context for Followers (ecf page?).',
      weight: ALL_POC_ITEM_MAP['followers'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.COMMUNITY_ACCEPTANCE],
      // TODO: add validation schema
    },
    contribution_frequency_ecf_page: {
      key: 'contribution_frequency_ecf_page',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Contribution Frequency [ECF Page]',
      description:
        'Provide key information about Contribution Frequency [ECF Page].',
      shortDescription: '',
      longDescription:
        'Provide detailed context for Contribution Frequency [ECF Page].',
      weight: ALL_POC_ITEM_MAP['contribution_frequency_ecf_page'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [],
      // TODO: add validation schema
    },
    token_concentration: {
      key: 'token_concentration',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Token Concentration (if token)',
      description:
        "Token concentration refers to how much of a token's total supply is held by a small number of addresses. It signals the level of distribution and potential centralization of power or risk within a project's economy.",
      shortDescription:
        "Token concentration refers to how much of a token's total supply is held by a small number of addresses. It signals the level of distribution and potential centralization of power or risk within a project's economy.",
      longDescription:
        'Provide detailed context for Token Concentration (if token).',
      weight: ALL_POC_ITEM_MAP['token_concentration'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [],
      // TODO: add validation schema
    },
    number_of_nodes: {
      key: 'number_of_nodes',
      category: IItemCategoryEnum.Technicals,
      subCategory: IItemSubCategoryEnum.Development,
      isEssential: false,
      label: 'Number of Nodes',
      description: 'Provide key information about Number of Nodes.',
      shortDescription: '',
      longDescription: 'Provide detailed context for Number of Nodes.',
      weight: ALL_POC_ITEM_MAP['number_of_nodes'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [ALL_METRICS.COMMUNITY_ACCEPTANCE],
      // TODO: add validation schema
    },
    geographical_distribution: {
      key: 'geographical_distribution',
      category: IItemCategoryEnum.Technicals,
      subCategory: IItemSubCategoryEnum.Development,
      isEssential: false,
      label: 'Geographical Distribution (if Blockchain)',
      description:
        'Provide key information about Geographical Distribution (if Blockchain).',
      shortDescription: '',
      longDescription:
        'Provide detailed context for Geographical Distribution (if Blockchain).',
      weight: ALL_POC_ITEM_MAP['geographical_distribution'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [
        ALL_METRICS.TRANSPARENCY,
        ALL_METRICS.PARTICIPATION,
        ALL_METRICS.PERFORMANCE_EVAL,
      ],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PERFORMANCE],
      // TODO: add validation schema
    },
    token_inflation_rate: {
      key: 'token_inflation_rate',
      category: IItemCategoryEnum.Technicals,
      subCategory: IItemSubCategoryEnum.Development,
      isEssential: false,
      label: 'Token Inflation Rate',
      description: 'Provide key information about Token Inflation Rate.',
      shortDescription: '',
      longDescription: 'Provide detailed context for Token Inflation Rate.',
      weight: ALL_POC_ITEM_MAP['token_inflation_rate'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    tools: {
      key: 'tools',
      category: IItemCategoryEnum.Technicals,
      subCategory: IItemSubCategoryEnum.Development,
      isEssential: false,
      label: 'Tools (PoW)',
      description: 'Provide key information about Tools (PoW).',
      shortDescription: '',
      longDescription: 'Provide detailed context for Tools (PoW).',
      weight: ALL_POC_ITEM_MAP['tools'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION, ALL_METRICS.TRANSPARENCY],
      legitimacy: [
        ALL_METRICS.COMMUNITY_ACCEPTANCE,
        ALL_METRICS.LEGITIMACY_BY_PROCESS,
      ],
      // TODO: add validation schema
    },
    participation_threshold: {
      key: 'participation_threshold',
      category: IItemCategoryEnum.Technicals,
      subCategory: IItemSubCategoryEnum.Development,
      isEssential: false,
      label: 'Participation Threshold (Token)',
      description:
        'Provide key information about Participation Threshold (Token).',
      shortDescription: '',
      longDescription:
        'Provide detailed context for Participation Threshold (Token).',
      weight: ALL_POC_ITEM_MAP['participation_threshold'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [],
      legitimacy: [],
      // TODO: add validation schema
    },
    token_lock_up_period: {
      key: 'token_lock_up_period',
      category: IItemCategoryEnum.Technicals,
      subCategory: IItemSubCategoryEnum.Development,
      isEssential: false,
      label: 'Token Lock-Up Period',
      description: 'Provide key information about Token Lock-Up Period.',
      shortDescription: '',
      longDescription: 'Provide detailed context for Token Lock-Up Period.',
      weight: ALL_POC_ITEM_MAP['token_lock_up_period'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    dex_24h_volume: {
      key: 'dex_24h_volume',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'DEX 24h Volume (Nov, 2022)',
      description: 'Provide key information about DEX 24h Volume (Nov, 2022).',
      shortDescription: '',
      longDescription:
        'Provide detailed context for DEX 24h Volume (Nov, 2022).',
      weight: ALL_POC_ITEM_MAP['dex_24h_volume'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [],
      legitimacy: [],
      // TODO: add validation schema
    },
    dex_market_cap: {
      key: 'dex_market_cap',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'DEX market cap (Nov, 2022)',
      description: 'Provide key information about DEX market cap (Nov, 2022).',
      shortDescription: '',
      longDescription:
        'Provide detailed context for DEX market cap (Nov, 2022).',
      weight: ALL_POC_ITEM_MAP['dex_market_cap'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [],
      legitimacy: [],
      // TODO: add validation schema
    },
    token_roi: {
      key: 'token_roi',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'token ROI (lifetime)(Nov, 2022)',
      description:
        'Provide key information about token ROI (lifetime)(Nov, 2022).',
      shortDescription: '',
      longDescription:
        'Provide detailed context for token ROI (lifetime)(Nov, 2022).',
      weight: ALL_POC_ITEM_MAP['token_roi'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [],
      legitimacy: [],
      // TODO: add validation schema
    },
    team_token_locking_period: {
      key: 'team_token_locking_period',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Team token locking period',
      description:
        'Token lockup refers to a time period during which cryptocurrency tokens cannot be exchanged or traded.',
      shortDescription:
        'Token lockup refers to a time period during which cryptocurrency tokens cannot be exchanged or traded.',
      longDescription:
        'Provide detailed context for Team token locking period.',
      weight: ALL_POC_ITEM_MAP['team_token_locking_period'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    capital_endorsers: {
      key: 'capital_endorsers',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Capital Endorsers + :',
      description: 'Table: User(if/a)/Address, Rep, Rounds, Eval, Amount.',
      shortDescription: 'Table: User(if/a)/Address, Rep, Rounds, Eval, Amount.',
      longDescription: 'Provide detailed context for Capital Endorsers + :.',
      weight: ALL_POC_ITEM_MAP['capital_endorsers'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    token_roi_token: {
      key: 'token_roi_token',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Token ROI (24hr)',
      description:
        'Short for "Return on Investment," the ratio between the net profit and cost of investing.',
      shortDescription:
        'Short for "Return on Investment," the ratio between the net profit and cost of investing.',
      longDescription: 'Provide detailed context for Token ROI (24hr).',
      weight: ALL_POC_ITEM_MAP['token_roi_token'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    distribution_graph: {
      key: 'distribution_graph',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Distribution Graph:',
      description:
        'The allocation of tokens specific to a new cryptocurrency project when it is launched. Usually dispersed among founders, investors, staff, the community and for operational/marketing requirements.',
      shortDescription:
        'The allocation of tokens specific to a new cryptocurrency project when it is launched. Usually dispersed among founders, investors, staff, the community and for operational/marketing requirements.',
      longDescription: 'Provide detailed context for Distribution Graph:.',
      weight: ALL_POC_ITEM_MAP['distribution_graph'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    token_burn_rate: {
      key: 'token_burn_rate',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Token Burn Rate',
      description: 'The amount of coins that removed from the circulation',
      shortDescription: 'The amount of coins that removed from the circulation',
      longDescription: 'Provide detailed context for Token Burn Rate.',
      weight: ALL_POC_ITEM_MAP['token_burn_rate'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    // TODO: Potential duplicate with existing AllItemConfig
    runway: {
      key: 'runway',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Runway +',
      description:
        'Estimates how long the project can operate based on its current spending and available funds.',
      shortDescription:
        'Estimates how long the project can operate based on its current spending and available funds.',
      longDescription: 'Provide detailed context for Runway +.',
      weight: ALL_POC_ITEM_MAP['runway'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PERFORMANCE],
      validationSchema: itemValidationSchemas.runway,
    },
    exchanges_list: {
      key: 'exchanges_list',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Exchanges List',
      description: 'A list of exchanges to trade this token',
      shortDescription: 'A list of exchanges to trade this token',
      longDescription: 'Provide detailed context for Exchanges List.',
      weight: ALL_POC_ITEM_MAP['exchanges_list'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    distribution: {
      key: 'distribution',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Distribution:',
      description:
        'The allocation of tokens specific to a new cryptocurrency project when it is launched. Usually dispersed among founders, investors, staff, the community and for operational/marketing requirements.',
      shortDescription:
        'The allocation of tokens specific to a new cryptocurrency project when it is launched. Usually dispersed among founders, investors, staff, the community and for operational/marketing requirements.',
      longDescription: 'Provide detailed context for Distribution:.',
      weight: ALL_POC_ITEM_MAP['distribution'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    market_cap: {
      key: 'market_cap',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Market Cap',
      description: 'The value of all  coins on the exchange',
      shortDescription: 'The value of all  coins on the exchange',
      longDescription: 'Provide detailed context for Market Cap.',
      weight: ALL_POC_ITEM_MAP['market_cap'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [],
      // TODO: add validation schema
    },
    token_distribution: {
      key: 'token_distribution',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Token Distribution (over addresses?)',
      description:
        'Shows the percentage of coin holders, founders, investors and for sale.e.g.Private Sale,Pre-Sale, Public Sale.',
      shortDescription:
        'Shows the percentage of coin holders, founders, investors and for sale.e.g.Private Sale,Pre-Sale, Public Sale.',
      longDescription:
        'Provide detailed context for Token Distribution (over addresses?).',
      weight: ALL_POC_ITEM_MAP['token_distribution'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    funding_status: {
      key: 'funding_status',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Funding Status +',
      description: 'This shows if the project is currently fundraising',
      shortDescription: 'This shows if the project is currently fundraising',
      longDescription: 'Provide detailed context for Funding Status +.',
      weight: ALL_POC_ITEM_MAP['funding_status'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      options: [
        { value: 'Actively Fundraising', label: 'Actively Fundraising' },
        {
          value: 'Funded / Capital Secured',
          label: 'Funded / Capital Secured',
        },
        {
          value: 'Grant Pending / In Review',
          label: 'Grant Pending / In Review',
        },
        { value: 'Self-Funded', label: 'Self-Funded' },
        { value: 'Public Crowdsale', label: 'Public Crowdsale' },
        { value: 'Ongoing', label: 'Ongoing' },
        { value: 'No Funding Required', label: 'No Funding Required' },
        { value: 'Not Disclosed', label: 'Not Disclosed' },
      ],
      // TODO: add validation schema
    },
    asset_statements: {
      key: 'asset_statements',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Asset Statements',
      description:
        'An asset statement provides insight into your net worth, meaning money you have left over after you pay all your bills. Assets are economic resources that you own.',
      shortDescription:
        'An asset statement provides insight into your net worth, meaning money you have left over after you pay all your bills. Assets are economic resources that you own.',
      longDescription: 'Provide detailed context for Asset Statements.',
      weight: ALL_POC_ITEM_MAP['asset_statements'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    supplied_circulation: {
      key: 'supplied_circulation',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Token,
      isEssential: false,
      label: 'Supplied Circulation (by Whitepaper)',
      description:
        'A measure of the supply of a cryptocurrency that is in general circulation. Given lost or burned coins, this figure is hard to accurately establish. Circulating supply will function as a proportion of Total Supply.',
      shortDescription:
        'A measure of the supply of a cryptocurrency that is in general circulation. Given lost or burned coins, this figure is hard to accurately establish. Circulating supply will function as a proportion of Total Supply.',
      longDescription:
        'Provide detailed context for Supplied Circulation (by Whitepaper).',
      weight: ALL_POC_ITEM_MAP['supplied_circulation'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    complaints_redress_rating: {
      key: 'complaints_redress_rating',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Complaints & Redress Rating',
      description: 'Provide key information about Complaints & Redress Rating.',
      shortDescription: '',
      longDescription:
        'Provide detailed context for Complaints & Redress Rating.',
      weight: ALL_POC_ITEM_MAP['complaints_redress_rating'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.COMPLAINTS_AND_REDRESS],
      legitimacy: [],
      // TODO: add validation schema
    },
    node_anonimity: {
      key: 'node_anonimity',
      category: IItemCategoryEnum.Technicals,
      subCategory: IItemSubCategoryEnum.Development,
      isEssential: false,
      label: 'Node Anonimity (2023.2)',
      description: 'Provide key information about Node Anonimity (2023.2).',
      shortDescription: '',
      longDescription: 'Provide detailed context for Node Anonimity (2023.2).',
      weight: ALL_POC_ITEM_MAP['node_anonimity'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    project_funded: {
      key: 'project_funded',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Project Funded (date) + (attestation)',
      description: 'The date at which this project was last funded',
      shortDescription: 'The date at which this project was last funded',
      longDescription:
        'Provide detailed context for Project Funded (date) + (attestation).',
      weight: ALL_POC_ITEM_MAP['project_funded'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PERFORMANCE],
      // TODO: add validation schema
    },
    total_investment_amount: {
      key: 'total_investment_amount',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Total Investment Amount',
      description: 'Provide key information about Total Investment Amount.',
      shortDescription: '',
      longDescription: 'Provide detailed context for Total Investment Amount.',
      weight: ALL_POC_ITEM_MAP['total_investment_amount'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    '3rd_party_participation_services': {
      key: '3rd_party_participation_services',
      category: IItemCategoryEnum.Technicals,
      subCategory: IItemSubCategoryEnum.Development,
      isEssential: false,
      label: '3rd Party Participation Services',
      description:
        'Provide key information about 3rd Party Participation Services.',
      shortDescription: '',
      longDescription:
        'Provide detailed context for 3rd Party Participation Services.',
      weight: ALL_POC_ITEM_MAP['3rd_party_participation_services'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION, ALL_METRICS.TRANSPARENCY],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
      // TODO: add validation schema
    },
    number_of_nodes_sub_maintainence: {
      key: 'number_of_nodes_sub_maintainence',
      category: IItemCategoryEnum.Technicals,
      subCategory: IItemSubCategoryEnum.Development,
      isEssential: false,
      label: 'Number of Nodes',
      description: 'Provide key information about Number of Nodes.',
      shortDescription: '',
      longDescription: 'Provide detailed context for Number of Nodes.',
      weight: ALL_POC_ITEM_MAP['number_of_nodes_sub_maintainence'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [
        ALL_METRICS.COMMUNITY_ACCEPTANCE,
        ALL_METRICS.LEGITIMACY_BY_PERFORMANCE,
      ],
      // TODO: add validation schema
    },
    related_projects: {
      key: 'related_projects',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Related Projects',
      description: 'These are projects related to current_$project',
      shortDescription: 'These are projects related to current_$project',
      longDescription: 'Provide detailed context for Related Projects.',
      weight: ALL_POC_ITEM_MAP['related_projects'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [],
      legitimacy: [],
      // TODO: add validation schema
    },
    protocol_blockchain: {
      key: 'protocol_blockchain',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Protocol: Blockchain',
      description: 'Provide key information about Protocol: Blockchain.',
      shortDescription: '',
      longDescription: 'Provide detailed context for Protocol: Blockchain.',
      weight: ALL_POC_ITEM_MAP['protocol_blockchain'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [],
      // TODO: add validation schema
    },
    community_sentiment: {
      key: 'community_sentiment',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Community Sentiment',
      description:
        'Internally calculated score reflecting how the community perceives the project.',
      shortDescription:
        'Internally calculated score reflecting how the community perceives the project.',
      longDescription: 'Provide detailed context for Community Sentiment.',
      weight: ALL_POC_ITEM_MAP['community_sentiment'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PARTICIPATION],
      legitimacy: [],
      // TODO: add validation schema
    },
    rating: {
      key: 'rating',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Rating',
      description: 'Community rating from 1 to 5 stars',
      shortDescription: 'Community rating from 1 to 5 stars',
      longDescription: 'Provide detailed context for Rating.',
      weight: ALL_POC_ITEM_MAP['rating'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [ALL_METRICS.COMMUNITY_ACCEPTANCE],
      // TODO: add validation schema
    },
    resilience_sustainability_rating: {
      key: 'resilience_sustainability_rating',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Resilience & Sustainability Rating',
      description:
        'Provide key information about Resilience & Sustainability Rating.',
      shortDescription: '',
      longDescription:
        'Provide detailed context for Resilience & Sustainability Rating.',
      weight: ALL_POC_ITEM_MAP['resilience_sustainability_rating'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [],
      // TODO: add validation schema
    },
    community_participation_rating: {
      key: 'community_participation_rating',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Community Participation Rating',
      description:
        'Provide key information about Community Participation Rating.',
      shortDescription: '',
      longDescription:
        'Provide detailed context for Community Participation Rating.',
      weight: ALL_POC_ITEM_MAP['community_participation_rating'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [],
      // TODO: add validation schema
    },
    security_rating: {
      key: 'security_rating',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Security Rating',
      description: 'i.e. Attack Cost',
      shortDescription: 'i.e. Attack Cost',
      longDescription: 'Provide detailed context for Security Rating.',
      weight: ALL_POC_ITEM_MAP['security_rating'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [],
      // TODO: add validation schema
    },
    project_partnerships: {
      key: 'project_partnerships',
      category: IItemCategoryEnum.Organization,
      subCategory: IItemSubCategoryEnum.Organization,
      isEssential: false,
      label: 'Project Partnerships (merged to affiliated?)',
      description:
        'Provide key information about Project Partnerships (merged to affiliated?).',
      shortDescription: '',
      longDescription:
        'Provide detailed context for Project Partnerships (merged to affiliated?).',
      weight: ALL_POC_ITEM_MAP['project_partnerships'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
      legitimacy: [ALL_METRICS.COMMUNITY_ACCEPTANCE],
      // TODO: add validation schema
    },
    audit_metric: {
      key: 'audit_metric',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Audit Metric (TBD)',
      description:
        'a. audit to confirm compliance with the norms of AML (Anti Money Laundering) - the law against money laundering;  b. forensic audit - investigation of transactions, identification of unspoken connections, partners and stakeholders based on the study of distributed registries;  c. support and strengthening of financial crime investigation teams d. Trudatum - confirmation of rights to a digital asset;',
      shortDescription:
        'a. audit to confirm compliance with the norms of AML (Anti Money Laundering) - the law against money laundering;  b. forensic audit - investigation of transactions, identification of unspoken connections, partners and stakeholders based on the study of distributed registries;  c. support and strengthening of financial crime investigation teams d. Trudatum - confirmation of rights to a digital asset;',
      longDescription: 'Provide detailed context for Audit Metric (TBD).',
      weight: ALL_POC_ITEM_MAP['audit_metric'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
    financial_status: {
      key: 'financial_status',
      category: IItemCategoryEnum.Basics,
      subCategory: IItemSubCategoryEnum.BasicProfile,
      isEssential: false,
      label: 'Financial Status +',
      description:
        "Main status of project's lifeline e.g. in development, live , stealth, alpha, beta, acquired (no longer live), dead.",
      shortDescription:
        "Main status of project's lifeline e.g. in development, live , stealth, alpha, beta, acquired (no longer live), dead.",
      longDescription: 'Provide detailed context for Financial Status +.',
      weight: ALL_POC_ITEM_MAP['financial_status'].weight,
      formDisplayType: 'select',
      placeholder: 'Select an option',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [],
      // TODO: add validation schema
    },
    income_revenue: {
      key: 'income_revenue',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Income/Revenue (Statements) +',
      description:
        "Reports the project's income over a defined period, with itemized sources and transaction details.",
      shortDescription:
        "Reports the project's income over a defined period, with itemized sources and transaction details.",
      longDescription:
        'Provide detailed context for Income/Revenue (Statements) +.',
      weight: ALL_POC_ITEM_MAP['income_revenue'].weight,
      formDisplayType: 'link',
      placeholder: 'https://example.com',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
      legitimacy: [ALL_METRICS.LEGITIMACY_BY_PERFORMANCE],
      // TODO: add validation schema
    },
    investments: {
      key: 'investments',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Investments',
      description: 'Table: User(if/a)/Address, Rep, Rounds, Eval, Amount.',
      shortDescription: 'Table: User(if/a)/Address, Rep, Rounds, Eval, Amount.',
      longDescription: 'Provide detailed context for Investments.',
      weight: ALL_POC_ITEM_MAP['investments'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [
        ALL_METRICS.COMMUNITY_ACCEPTANCE,
        ALL_METRICS.LEGITIMACY_BY_PROCESS,
      ],
      // TODO: add validation schema
    },
    fundraising_price: {
      key: 'fundraising_price',
      category: IItemCategoryEnum.Financial,
      subCategory: IItemSubCategoryEnum.Finances,
      isEssential: false,
      label: 'Fundraising Price',
      description:
        'the discounted Price at which the project shares / tokens have been sold to initial investors',
      shortDescription:
        'the discounted Price at which the project shares / tokens have been sold to initial investors',
      longDescription: 'Provide detailed context for Fundraising Price.',
      weight: ALL_POC_ITEM_MAP['fundraising_price'].weight,
      formDisplayType: 'unknown',
      placeholder: 'Provide details',
      showReference: true,
      showExpand: false,
      accountability: [ALL_METRICS.TRANSPARENCY],
      legitimacy: [],
      // TODO: add validation schema
    },
  };
