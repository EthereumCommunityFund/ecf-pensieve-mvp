import { ALL_POC_ITEM_MAP } from '@/lib/constants';
import { POC_ITEMS } from '@/lib/pocItems';
import {
  IItemCategoryEnum,
  IItemConfig,
  IItemKey,
  IItemSubCategoryEnum,
} from '@/types/item';

import {
  dateFoundedConstraints,
  dateLaunchConstraints,
  itemValidationSchemas,
} from './itemSchemas';
import { ALL_METRICS } from './metrics';

export const AllItemConfig: Partial<Record<IItemKey, IItemConfig<IItemKey>>> = {
  name: {
    key: 'name',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.name.isEssential,
    label: 'Project Name',
    description: 'type in the name of the project to propose',
    shortDescription: `Your Project's official name`,
    longDescription: ``,
    weight: ALL_POC_ITEM_MAP.name.weight,
    formDisplayType: 'string',
    placeholder: 'Type in a name',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [],
    validationSchema: itemValidationSchemas.name,
  },
  tagline: {
    key: 'tagline',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.tagline.isEssential,
    label: 'Tagline',
    description:
      'Write a short and clear sentence that captures the essence of the project.',
    shortDescription:
      'A one-line phrase that captures the essence of your project.',
    longDescription: `The project tagline is a short, memorable sentence or phrase that conveys your project’s core mission, value, or vision at a glance. It’s often the first impression you make, so it should be clear, distinctive, and aligned with your messaging. Think of it as your project’s elevator pitch in a single line — suitable for listings, profiles, and promotional materials.`,
    weight: ALL_POC_ITEM_MAP.tagline.weight,
    formDisplayType: 'string',
    placeholder: 'Type in a tagline',
    showReference: true,
    showExpand: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [],
    validationSchema: itemValidationSchemas.tagline,
  },
  categories: {
    key: 'categories',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.categories.isEssential,
    label: 'Project Category',
    description:
      "Select the categories that best fit the project's domain or impact area.",
    shortDescription: `Defines the project’s architectural and operational model — from centralized to decentralized`,
    longDescription: `This field helps describe both what your project does (e.g. DeFi, NFTs, DAO tooling) and how it operates structurally — whether it's centralized, partly decentralized, or aiming for full decentralization. A centralized project is typically controlled by a single company or small team, while a decentralized one distributes decision-making and ownership across a broader community (often using tokens or DAOs). Most Web3 projects fall somewhere in between, and it's okay if your structure is still evolving. Choose the option that best reflects your current setup, not just your long-term goal.`,
    weight: ALL_POC_ITEM_MAP.categories.weight,
    formDisplayType: 'selectMultiple',
    placeholder: 'Select categories',
    options: [
      { value: 'Infrastructure', label: 'Infrastructure' },
      { value: 'Developer tools', label: 'Developer tools' },
      { value: 'Applications/dApps', label: 'Applications/dApps' },
      { value: 'Community & Coordination', label: 'Community & Coordination' },
      { value: 'Security & Privacy', label: 'Security & Privacy' },
      { value: 'Storage & Data', label: 'Storage & Data' },
      { value: 'Other', label: 'Other' },
    ],
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [ALL_METRICS.COMMUNITY_PARTICIPATION],
    validationSchema: itemValidationSchemas.categories,
  },
  tags: {
    key: 'tags',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.tags.isEssential,
    label: 'Tags',
    description:
      "Select or create the tags that best describe the project's focus, impact area, or techs.",
    shortDescription: `Add keywords that describe your project's focus, technology, or ecosystem.`,
    longDescription: `Project tags are concise labels that help categorize and surface your project in searches and filters. tags can refer to use cases (e.g. DeFi, NFTs, ReFi), technologies used (e.g. zk-rollups, IPFS, ERC-4626), ecosystem affiliations (e.g. Optimism, Gitcoin), or thematic focuses (e.g. Public Goods, Climate, Education). Use this field to highlight the key attributes or areas your project is most closely associated with. tags improve discoverability and help align your project with relevant communities and funding streams.`,
    weight: ALL_POC_ITEM_MAP.tags.weight,
    formDisplayType: 'autoComplete',
    placeholder: 'Select tags',
    showReference: true,
    options: [
      { value: 'd/acc', label: 'd/acc' },
      { value: 'Ethereum', label: 'Ethereum' },
      { value: 'Optimism', label: 'Optimism' },
      { value: 'Arbitrum', label: 'Arbitrum' },
      { value: 'ZK Rollup', label: 'ZK Rollup' },
      { value: 'IPFS', label: 'IPFS' },
      { value: 'DID', label: 'DID' },
      { value: 'Wallet', label: 'Wallet' },
      { value: 'ZK', label: 'ZK' },
      { value: 'Privacy', label: 'Privacy' },
      { value: 'Layer 1', label: 'Layer 1' },
      { value: 'Layer 2', label: 'Layer 2' },
      { value: 'AI Integration', label: 'AI Integration' },
      { value: 'Interoperability', label: 'Interoperability' },
      { value: 'Decentralised Storage', label: 'Decentralised Storage' },
      { value: 'Governance', label: 'Governance' },
      { value: 'Funding', label: 'Funding' },
      { value: 'Social', label: 'Social' },
      { value: 'GameFi', label: 'GameFi' },
      { value: 'DeFi', label: 'DeFi' },
      { value: 'NFT', label: 'NFT' },
      { value: 'Education', label: 'Education' },
      { value: 'Open-source', label: 'Open-source' },
      { value: 'Public goods', label: 'Public goods' },
    ],
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [],
    validationSchema: itemValidationSchemas.tags,
  },
  mainDescription: {
    key: 'mainDescription',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.mainDescription.isEssential,
    label: 'Project Description',
    description: 'Provide a detailed overview of the project.',
    shortDescription: `Present the core of your project to the community.`,
    longDescription: `The project description should provide a clear overview of what the project is, what it aims to achieve, and how it plans to get there. It should cover key elements such as the project's mission and goals, target market, unique value proposition (UVP), roadmap and milestones, success metrics, core team, token design (if applicable), and strategies for user adoption.`,
    weight: ALL_POC_ITEM_MAP.mainDescription.weight,
    formDisplayType: 'textarea',
    placeholder: 'Type in a description',
    minRows: 4,
    showReference: true,
    showExpand: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [],
    validationSchema: itemValidationSchemas.mainDescription,
  },
  logoUrl: {
    key: 'logoUrl',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.logoUrl.isEssential,
    label: 'Project Logo',
    description: 'provide a logo for this project',
    shortDescription: 'The visual logo of the project.',
    weight: ALL_POC_ITEM_MAP.logoUrl.weight,
    placeholder: '',
    formDisplayType: 'img',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [],
    validationSchema: itemValidationSchemas.logoUrl,
  },
  websites: {
    key: 'websites',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.websites.isEssential,
    label: 'Website',
    description: 'provide the main website for this project',
    shortDescription:
      'These are relevant links to a project’s website, their social media, among other sources.',
    weight: ALL_POC_ITEM_MAP.websites.weight,
    formDisplayType: 'websites',
    placeholder: 'Type in a URL',
    startContentText: 'https://',
    showReference: true,
    showExpand: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [],
    validationSchema: itemValidationSchemas.websites,
  },
  appUrl: {
    key: 'appUrl',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.appUrl.isEssential,
    label: 'App Link',
    description: 'provide the main application URL for this project',
    shortDescription:
      'The direct link to the project application (if different from the website).',
    weight: ALL_POC_ITEM_MAP.appUrl.weight,
    formDisplayType: 'link',
    placeholder: 'Type in a URL',
    startContentText: 'https://',
    showApplicable: true,
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [],
    validationSchema: itemValidationSchemas.appUrl,
  },
  whitePaper: {
    key: 'whitePaper',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.whitePaper.isEssential,
    label: 'White Paper',
    description: 'provide the white paper for this project',
    shortDescription: `A document released by a crypto project that gives investors technical information about its concept, and a roadmap for how it plans to grow and succeed.`,
    longDescription: `The whitepaper is a foundational document that outlines the core concept, architecture, and long-term vision of the project. It typically includes technical details about how the system works, the problem it aims to solve, the proposed solution, tokenomics (if any), governance structure, and plans for scalability and security. A well-crafted whitepaper also presents a roadmap, illustrating key milestones and development phases, and may include market analysis, competitive landscape, and risk factors. While originally targeted at investors, whitepapers today also serve developers, contributors, and the broader community as a reference point for understanding the project’s structure, strategy, and legitimacy.`,
    weight: ALL_POC_ITEM_MAP.whitePaper.weight,
    formDisplayType: 'link',
    placeholder: 'Type in a URL',
    startContentText: 'https://',
    showApplicable: true,
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
    validationSchema: itemValidationSchemas.whitePaper,
  },
  dateFounded: {
    key: 'dateFounded',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.dateFounded.isEssential,
    label: 'Date Founded',
    description: 'Select the date at which the project was founded.',
    shortDescription: 'The official date when the project officially began.',
    weight: ALL_POC_ITEM_MAP.dateFounded.weight,
    formDisplayType: 'date',
    placeholder: 'Select date',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [],
    dateConstraints: dateFoundedConstraints,
    validationSchema: itemValidationSchemas.dateFounded,
  },
  dateLaunch: {
    key: 'dateLaunch',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.dateLaunch.isEssential,
    label: 'Product Launch Date',
    description:
      'Select the date when the main product or service was launched (if applicable).',
    shortDescription: 'The official date of a product launch.',
    weight: ALL_POC_ITEM_MAP.dateLaunch.weight,
    formDisplayType: 'date',
    placeholder: 'Select date',
    showApplicable: true,
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
    legitimacy: [],
    dateConstraints: dateLaunchConstraints,
    validationSchema: itemValidationSchemas.dateLaunch,
  },
  devStatus: {
    key: 'devStatus',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.devStatus.isEssential,
    label: 'Development Status',
    description: 'Select the current status of their development',
    shortDescription:
      'Indicates whether the project is currently active or inactive.',
    longDescription: `This field reflects the operational status of the project — whether it is actively maintained and progressing, or has become inactive, dormant, or discontinued. An active project typically shows signs of ongoing development, community engagement, or recent updates, while an inactive one may have halted progress, been abandoned, or reached a natural end. Providing this status helps set expectations for collaborators, users, and funders.`,
    weight: ALL_POC_ITEM_MAP.devStatus.weight,
    formDisplayType: 'select',
    placeholder: 'Select status',
    options: [
      { value: 'Idea/Whitepaper', label: 'Idea/Whitepaper' },
      { value: 'Prototype', label: 'Prototype' },
      { value: 'In development', label: 'In development' },
      { value: 'Alpha', label: 'Alpha' },
      { value: 'Beta', label: 'Beta' },
      { value: 'Live (working product)', label: 'Live (working product)' },
      { value: 'Broken / Abandoned', label: 'Broken / Abandoned' },
      { value: 'Concept', label: 'Concept' },
      { value: 'Stealth', label: 'Stealth' },
      { value: 'Active Community', label: 'Active Community' },
      { value: 'Operational Community', label: 'Operational Community' },
    ],
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
    legitimacy: [],
    validationSchema: itemValidationSchemas.devStatus,
  },
  openSource: {
    key: 'openSource',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.openSource.isEssential,
    label: 'Open-source Status',
    description: 'Is this project now open-source?',
    shortDescription:
      'Indicates whether the project’s code is publicly available and reusable.',
    longDescription: `This field identifies whether the project’s source code is open and accessible to the public. Open source code can typically be inspected, reused, modified, or forked by anyone. However, a project may be partially open source — for example, with core smart contracts published but front-end or backend services remaining closed. Sharing code transparently promotes community trust, collaboration, and security through public audits.`,
    placeholder: 'Select open-source status',
    weight: ALL_POC_ITEM_MAP.openSource.weight,
    formDisplayType: 'select',
    options: [
      { value: 'Yes', label: 'Yes' },
      { value: 'No', label: 'No' },
    ],
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
    legitimacy: [ALL_METRICS.COMMUNITY_PARTICIPATION],
    validationSchema: itemValidationSchemas.openSource,
  },
  codeRepo: {
    key: 'codeRepo',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.codeRepo.isEssential,
    label: 'Repository Link',
    description: 'Provide a URL to their repository',
    shortDescription: 'The repository link hosting the project source code.',
    weight: ALL_POC_ITEM_MAP.codeRepo.weight,
    formDisplayType: 'link',
    placeholder: 'https://github.com/your-org/repo',
    startContentText: 'https://',
    showApplicable: true,
    showReference: true,
    accountability: [
      ALL_METRICS.TRANSPARENCY,
      ALL_METRICS.PARTICIPATION,
      ALL_METRICS.PERFORMANCE_EVAL,
    ],
    legitimacy: [ALL_METRICS.COMMUNITY_PARTICIPATION],
    validationSchema: itemValidationSchemas.codeRepo,
  },
  dappSmartContracts: {
    key: 'dappSmartContracts',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.dappSmartContracts.isEssential,
    label: 'Dapp Smart Contracts',
    description:
      'Input the projects smart contracts. Use Add Reference to paste the URL from the block explorer of your choice (Etherscan, Ethexplorer, etc)',
    shortDescription: `What does your project's smart contract do at high level? Definition of Smart Contract: a set of rules defined in code that can be executed by an underlying blockchain for a fee e.g smart contracts on Ethereum.`,
    longDescription: `List specific features (imports, functions, modifiers, security implementations) and/or gas optimizations of your smart contract`,
    weight: ALL_POC_ITEM_MAP.dappSmartContracts.weight,
    formDisplayType: 'stringMultiple',
    placeholder: '0x...',
    showReference: true,
    showApplicable: true,
    showExpand: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
    validationSchema: itemValidationSchemas.dappSmartContracts,
  },
  orgStructure: {
    key: 'orgStructure',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Organization,
    isEssential: POC_ITEMS.orgStructure.isEssential,
    label: 'Organization Structure',
    description: "Describe the project's governance model.",
    shortDescription:
      'The organization or group responsible for initiating, maintaining, and developing the project.',
    longDescription: `This field describes how the project is structured and operated — whether it’s run by a formal company, a nonprofit, a DAO, or an informal collective. It helps assess how centralized or decentralized decision-making and accountability are within the organization.`,
    weight: ALL_POC_ITEM_MAP.orgStructure.weight,
    formDisplayType: 'string',
    placeholder: 'Type in the organization structure',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
    legitimacy: [ALL_METRICS.COMMUNITY_PARTICIPATION],
    validationSchema: itemValidationSchemas.orgStructure,
  },
  publicGoods: {
    key: 'publicGoods',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Organization,
    isEssential: POC_ITEMS.publicGoods.isEssential,
    label: 'Public-Goods Nature',
    description: 'Is this project a public good?',
    shortDescription:
      'This Project offers benefits provided to a community that are typically under-provided by the free market.',
    longDescription: `Public goods are things like open source code, shared infrastructure, openly shared research, documentation, community building or other benefits provided to the community that are typically under-provided by the free market.`,
    weight: ALL_POC_ITEM_MAP.publicGoods.weight,
    placeholder: 'Select public goods',
    formDisplayType: 'select',
    options: [
      { value: 'Yes', label: 'Yes' },
      { value: 'No', label: 'No' },
    ],
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [ALL_METRICS.COMMUNITY_PARTICIPATION],
    validationSchema: itemValidationSchemas.publicGoods,
  },
  founders: {
    key: 'founders',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Team,
    isEssential: POC_ITEMS.founders.isEssential,
    label: 'Founders',
    description:
      'Provide the founders of this project (minimum of 1 founder is required)',
    shortDescription: 'The list of founding team members of the project.',
    placeholder: 'Add a founder',
    weight: ALL_POC_ITEM_MAP.founders.weight,
    formDisplayType: 'founderList',
    showReference: true,
    showExpand: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_CONTINUITY],
    validationSchema: itemValidationSchemas.founders,
  },
  fundingStatus: {
    key: 'fundingStatus',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.fundingStatus.isEssential,
    label: 'Funding Status',
    description: 'Indicate whether the project has been funded.',
    shortDescription: 'This shows if the project is currently fundraising',
    longDescription: `This field shows whether the project is actively fundraising, already funded, self-funded, or operating without external capital. Understanding the funding status provides insight into the project’s financial sustainability, growth stage, and potential risks. It can also signal whether the team is seeking additional backers or is currently focused on execution.`,
    weight: ALL_POC_ITEM_MAP.fundingStatus.weight,
    formDisplayType: 'select',
    placeholder: 'Select funding status',
    showApplicable: true,
    options: [
      { value: 'Yes', label: 'Yes' },
      { value: 'No', label: 'No' },
    ],
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
    legitimacy: [ALL_METRICS.COMMUNITY_ACCEPTANCE],
    validationSchema: itemValidationSchemas.fundingStatus,
  },
  tokenContract: {
    key: 'tokenContract',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Token,
    isEssential: POC_ITEMS.tokenContract.isEssential,
    label: 'Token Contract',
    description:
      "Provide the address of the project's token smart contract, if applicable. Use Add Reference to paste the URL from the block explorer of your choice (Etherscan, Ethexplorer, etc)",
    shortDescription:
      ' A token contract is a smart contract that contains a mapping of addresses and account balances.',
    longDescription: `A token contract is a smart contract deployed on a blockchain that defines the rules and logic of a project's token. It typically includes a mapping of wallet addresses to their token balances, and governs core functionalities such as transfers, approvals, minting, burning, and in some cases, staking or governance rights. This field should include the token contract address, which allows users, auditors, and explorers to independently verify the token's code and on-chain activity. Providing this information is key for transparency, as it enables others to track supply, distribution, and usage directly on the blockchain. If the project has multiple token contracts (e.g. for wrapped versions or migration), those should also be disclosed.`,
    weight: ALL_POC_ITEM_MAP.tokenContract.weight,
    formDisplayType: 'string',
    placeholder: '0x...',
    showReference: true,
    showApplicable: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [],
    validationSchema: itemValidationSchemas.tokenContract,
  },
  adoption_plan: {
    key: 'adoption_plan',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.adoption_plan.isEssential,
    label: 'Adoption Plan',
    description:
      'Describe how the project plans to grow its user base or drive adoption of the project.',
    shortDescription:
      'The plan for the project to be adopted by the community.',
    weight: ALL_POC_ITEM_MAP.adoption_plan.weight,
    formDisplayType: 'textarea',
    placeholder: 'Type in a plan',
    showReference: true,
    showExpand: true,
    accountability: [ALL_METRICS.PARTICIPATION, ALL_METRICS.PERFORMANCE_EVAL],
    legitimacy: [ALL_METRICS.COMMUNITY_ACCEPTANCE],
  },
  launch_plan: {
    key: 'launch_plan',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.launch_plan.isEssential,
    label: 'Launch Plan',
    description: 'Outline how and when the project plans to launch it.',
    shortDescription: 'How and when do you intend to Start the Project.',
    longDescription: `The launch plan serves as a practical guide for initiating the project. It outlines the key tasks, milestones, and deadlines required to go live. Think of it as a structured checklist to ensure all essential steps are completed for a successful launch.`,
    weight: ALL_POC_ITEM_MAP.launch_plan.weight,
    formDisplayType: 'textarea',
    placeholder: 'Type in a plan',
    showReference: true,
    showExpand: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
    legitimacy: [ALL_METRICS.COMMUNITY_ACCEPTANCE],
  },
  roadmap: {
    key: 'roadmap',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.roadmap.isEssential,
    label: 'Roadmap',
    description: 'Provide the roadmap for this project',
    shortDescription: `This is a tool for visualizing the project’s development strategy.`,
    longDescription: `The roadmap is a doc that shows the main stages of the strategy implementation, deadlines and completion status of each stage. For ease of perception, information is most often presented in graphical form, but sometimes a text format you can use.Do not confuse the roadmap with the marketing plan. Roadmap is a tool for strategic, not tactical planning. The roadmap is to outline long-term goals (for months and sometimes years ahead), and not to describe how to achieve them.`,
    weight: ALL_POC_ITEM_MAP.roadmap.weight,
    formDisplayType: 'textarea',
    placeholder: 'Type in a roadmap',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_CONTINUITY],
  },
  audit_status: {
    key: 'audit_status',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.audit_status.isEssential,
    label: 'Audit Status',
    description: `Describe whether the project's code has been audited. If yes, mention the auditor and the audit date if available.`,
    shortDescription: `This shows if a project at any level has been audited. Below will include the details of their audits.`,
    longDescription: `This field indicates whether the project has undergone any form of security or technical audit, and at what level — including smart contracts, governance mechanisms, treasury systems, or other critical components. Audit status provides insight into the project’s commitment to transparency, user safety, and risk mitigation. If available, this section should also include links to published audit reports, names of auditing firms or individuals, dates of completion, and the scope of each audit. Projects may have multiple audits over time, and both passed and pending audits can be relevant for evaluating the project's maturity and trustworthiness.`,
    weight: ALL_POC_ITEM_MAP.audit_status.weight,
    formDisplayType: 'textarea',
    placeholder: 'Type status',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
  },
  dapp_category: {
    key: 'dapp_category',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.dapp_category.isEssential,
    label: 'Dapp Category',
    description: 'Select the category that best describes this dapp',
    shortDescription: `State if the Project's nature is 1. Financial  2. Partly Financial 3.Non Financial `,
    longDescription: `1. Financial
DApps whose core function revolves around handling or transferring value.

Decentralized Exchanges (DEXs), Lending & Borrowing Protocols, Stablecoins / Payment Systems, Yield Aggregators, Derivatives / Perpetuals, Asset Management Tools

2. Partly Financial
DApps with embedded financial elements, but not purely financial in nature.

NFT Marketplaces, Gaming (Play-to-Earn, In-Game Economies), Auction Platforms, Bridges / Cross-chain Swaps, SocialFi / Creator Economies

3. Non-Financial
DApps primarily focused on use cases unrelated to direct financial value exchange.

Decentralized Identity / Reputation, File Storage (e.g. IPFS-based platforms), Communication / Messaging, Coordination Tools (e.g. DAO tooling, voting), Knowledge Sharing (e.g. open research platforms), Art, Culture, and Media.`,
    weight: ALL_POC_ITEM_MAP.dapp_category.weight,
    formDisplayType: 'select',
    placeholder: 'Select category',
    options: [
      { value: 'DeFi', label: 'DeFi' },
      { value: 'NFTs', label: 'NFTs' },
      { value: 'Social', label: 'Social' },
      { value: 'Identity', label: 'Identity' },
      { value: 'DAOs & Governance', label: 'DAOs & Governance' },
      { value: 'Gaming', label: 'Gaming' },
      { value: 'Public Goods', label: 'Public Goods' },
      { value: 'Education', label: 'Education' },
      { value: 'Tooling', label: 'Tooling' },
      { value: 'Commerce & Marketplace', label: 'Commerce & Marketplace' },
      { value: 'Community', label: 'Community' },
      { value: 'Privacy & Security', label: 'Privacy & Security' },
    ],
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_PERFORMANCE],
  },
  protocol_built_on: {
    key: 'protocol_built_on',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.protocol_built_on.isEssential,
    label: 'Protocol Built On',
    description:
      'Specify the underlying protocol or blockchain this project is built on',
    shortDescription: `
Indicate the core chain(s) or protocol(s) your project is technically built on or dependent on.`,
    longDescription: `
This field identifies the underlying infrastructure your project is technically built upon — such as blockchains (e.g. Ethereum, Optimism), base protocols (e.g. Aave, ENS, Lens), or frameworks you’ve deployed contracts on or inherited core logic from. It refers to code-level dependency — not partnerships or general alignment. If your project integrates with a protocol that is no longer active or maintained, please still list it, but consider noting its current status.`,
    weight: ALL_POC_ITEM_MAP.protocol_built_on.weight,
    formDisplayType: 'string',
    placeholder: 'Type protocol name (e.g., Ethereum, Polygon, Solana)',
    showReference: true,
    accountability: [
      ALL_METRICS.TRANSPARENCY,
      ALL_METRICS.PERFORMANCE_EVAL,
      ALL_METRICS.PARTICIPATION,
    ],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
  },
  core_team: {
    key: 'core_team',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Team,
    isEssential: POC_ITEMS.core_team.isEssential,
    label: 'Core Team',
    description:
      'Provide the core team members of this project with their names and roles',
    shortDescription: `This item details a project’s core team members.`,
    longDescription: `This field highlights the current core team members actively involved in building, maintaining, and evolving the project. Unlike founders — who initiated the project — core team members may have joined later and are responsible for the day-to-day operations, development, strategy, or community coordination. This includes contributors with ongoing responsibilities such as developers, designers, product managers, or community leads. Listing their names, roles, and public addresses (if applicable) adds transparency around who is executing the project and how responsibilities are distributed within the team.`,
    weight: ALL_POC_ITEM_MAP.core_team.weight,
    formDisplayType: 'founderList',
    placeholder: 'Add a team member',
    showReference: true,
    showExpand: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
    legitimacy: [],
  },
  team_incentives: {
    key: 'team_incentives',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Team,
    isEssential: POC_ITEMS.team_incentives.isEssential,
    label: 'Team Incentives',
    description:
      'Describe the incentive structure and compensation model for the team',
    shortDescription:
      'Describes how the team is motivated and rewarded — through tokens, reputation, or long-term alignment mechanisms.',
    longDescription: `This field outlines the incentives offered to the project’s team members, which may include token vesting schedules, dividends, reputational rewards, or a sense of belonging within the community. Some projects may also define obligations or commitments tied to these incentives, such as contribution milestones or governance participation. Understanding how the team is incentivized helps assess long-term alignment, retention, and the values driving the project’s internal culture. Select all applicable incentive types.`,
    weight: ALL_POC_ITEM_MAP.team_incentives.weight,
    formDisplayType: 'textarea',
    placeholder: 'Describe team incentives and compensation structure',
    minRows: 3,
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
    legitimacy: [],
  },
  ownership_of_project: {
    key: 'ownership_of_project',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Team,
    isEssential: POC_ITEMS.ownership_of_project.isEssential,
    label: 'Ownership of Project',
    description:
      "Who owns or controls the project? Specify if it's founder-owned, community-owned, owned by a company, DAO, or another structure.",
    shortDescription: `the individuals or groups who have authority, accountability, and decision-making power over the project’s direction, scope, and outcomes`,
    weight: ALL_POC_ITEM_MAP.ownership_of_project.weight,
    formDisplayType: 'textarea',
    placeholder: 'Describe project ownership structure and distribution',
    minRows: 3,
    showReference: true,
    showExpand: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
    legitimacy: [],
  },
  project_funded_date: {
    key: 'project_funded_date',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.project_funded_date.isEssential,
    label: 'Project Funded Date',
    description: 'Select the date when the project received funding',
    shortDescription: 'The date when the project was officially funded.',
    weight: ALL_POC_ITEM_MAP.project_funded_date.weight,
    formDisplayType: 'date',
    placeholder: 'Select funding date',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_PERFORMANCE],
  },
  // total_grants: {
  //   key: 'total_grants',
  //   category: IItemCategoryEnum.Financial,
  //   subCategory: IItemSubCategoryEnum.Finances,
  //   isEssential: POC_ITEMS.total_grants.isEssential,
  //   label: 'Total Grants (calc)',
  //   description: 'Calculated total from Contributing Funds grant amounts and previous funding/grant amounts',
  //   shortDescription: 'Automatically calculated total grant amount from all funding sources.',
  //   weight: ALL_POC_ITEM_MAP.total_grants.weight,
  //   formDisplayType: 'string',
  //   placeholder: 'Calculated automatically',
  //   showReference: true,
  // },
  budget_plans: {
    key: 'budget_plans',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.budget_plans.isEssential,
    label: 'Budget Plans',
    description:
      'Provide a link to the project budget plans and financial projections',
    shortDescription: `Outlines expected income and expenses over a defined time period.`,
    longDescription: `The budget plan presents the project’s financial forecast, including projected revenues, expenses, and fund allocation over a set timeframe (e.g. quarterly or yearly). It helps stakeholders assess how resources are being planned and prioritized — whether for development, operations, community incentives, or growth. A clear budget plan reflects strategic thinking and financial discipline, especially for projects seeking funding or managing public goods. Include links to spreadsheets or governance-approved budgets if available.`,
    weight: ALL_POC_ITEM_MAP.budget_plans.weight,
    formDisplayType: 'link',
    placeholder: 'Type in a URL',
    startContentText: 'https://',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
    legitimacy: [],
  },
  expense_statements: {
    key: 'expense_statements',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.expense_statements.isEssential,
    label: 'Expense Statements',
    description:
      'Provide a link to the project expense statements and financial records',
    shortDescription: `Details the project’s spending, including specific items, addresses, and burn or runway metrics.`,
    longDescription: `
This field provides a breakdown of the project’s expenses, offering transparency into how funds are used. It may include transaction records, wallet addresses, categories of spending (e.g. development, marketing, grants), and token burn rate. When available, also include data related to runway estimates — how long the project can operate at its current spending rate. This disclosure helps the community, funders, and evaluators assess the project’s financial health, efficiency, and commitment to openness.`,
    weight: ALL_POC_ITEM_MAP.expense_statements.weight,
    formDisplayType: 'link',
    placeholder: 'Type in a URL',
    startContentText: 'https://',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_PERFORMANCE],
  },
  runway: {
    key: 'runway',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.runway.isEssential,
    label: 'Runway',
    description: 'Specify the project runway in months or currency amount',
    shortDescription: `Estimates how long the project can operate based on its current spending and available funds.`,
    longDescription: `The runway reflects the amount of time a project can continue functioning before running out of funds, given its current burn rate and cash or token reserves. It’s a key financial health indicator that helps stakeholders understand how sustainable the project is without new funding. Runway can be expressed in months or weeks, and should be updated regularly based on treasury balance and evolving expenses.`,
    weight: ALL_POC_ITEM_MAP.runway.weight,
    formDisplayType: 'string',
    placeholder: 'e.g., 12 months or $100,000',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PERFORMANCE_EVAL],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_PERFORMANCE],
  },
  income_and_revenue_statements: {
    key: 'income_and_revenue_statements',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.income_and_revenue_statements.isEssential,
    label: 'Income & Revenue Statements',
    description:
      'Provide links to income and revenue statements with labels for multiple entries',
    shortDescription: `Reports the project’s income over a defined period, with itemized sources and transaction details.`,
    longDescription: `This field captures the project’s revenue over time, typically reported on an annual or semi-annual basis. It should include a breakdown of income sources — such as protocol fees, token sales, grants, or service revenues — along with transaction records and, where possible, wallet addresses or on-chain references. Transparent income statements help evaluate the project’s sustainability, business model, and ability to generate value beyond external funding.`,
    weight: ALL_POC_ITEM_MAP.income_and_revenue_statements.weight,
    formDisplayType: 'stringMultiple',
    placeholder: 'Add income/revenue statement URL',
    showReference: true,
    accountability: [
      ALL_METRICS.TRANSPARENCY,
      ALL_METRICS.PERFORMANCE_EVAL,
      ALL_METRICS.KEY_ACCOUNTABILITY_ITEM,
    ],
    legitimacy: [],
  },
  token_sales: {
    key: 'token_sales',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Token,
    isEssential: POC_ITEMS.token_sales.isEssential,
    label: 'Token Sales',
    description:
      'Indicate whether the project has conducted or plans to conduct token sales',
    shortDescription: `Details the public token sale, including timeline, funding goals, participation, and contract address.`,
    longDescription: `This field captures the key information about the project's public token sales, such as the start and end dates, duration, target vs. raised amount, and participation data (e.g. number of backers, wallet addresses if available). It should also include the token sale smart contract address to allow for on-chain verification. This information is crucial for understanding the scale, distribution, and transparency of the project’s initial fundraising efforts. If multiple sales or rounds took place, they should be listed separately.`,
    weight: ALL_POC_ITEM_MAP.token_sales.weight,
    formDisplayType: 'select',
    placeholder: 'Select token sales status',
    options: [
      { value: 'Yes', label: 'Yes' },
      { value: 'No', label: 'No' },
      { value: 'N/A', label: 'N/A' },
    ],
    showReference: true,
    accountability: [
      ALL_METRICS.TRANSPARENCY,
      ALL_METRICS.KEY_ACCOUNTABILITY_ITEM,
    ],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
  },
  token_type: {
    key: 'token_type',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Token,
    isEssential: POC_ITEMS.token_type.isEssential,
    label: 'Token Type',
    description: 'Select the type of token or specify other type',
    shortDescription: `The token type is fundamental to understand a Project's spectrum, from financial viability to community engagement and impact status.`,
    longDescription: `
Access Tokens – used to unlock features, participate in a network, or access gated tools/services (e.g. utility tokens in DeFi apps or protocols).

Governance Tokens – give holders voting rights in DAOs or on protocol upgrades and treasury decisions.

Store of Value / Currency Tokens – used for payments, holding Value, or unit of account within an ecosystem (e.g. ETH, stablecoins).

Incentive / Reward Tokens – used to bootstrap growth, incentivize contributors, or reward network participation (e.g. mining/staking rewards).

Identity / Reputation Tokens – non-transferable tokens (SBTs, badges) that represent on-chain identity or contributions.

Asset-Backed Tokens – represent real-world or on-chain assets (e.g. tokenized gold, RWA, shares).

NFTs (Non-Fungible Tokens) – unique tokens that represent ownership of digital or physical assets (e.g. art, membership, media).`,
    weight: ALL_POC_ITEM_MAP.token_type.weight,
    formDisplayType: 'autoComplete',
    placeholder: 'Select token type',
    options: [
      { value: 'Access Token', label: 'Access Token' },
      { value: 'Governance Token', label: 'Governance Token' },
      {
        value: 'Store of Value / Currency Token',
        label: 'Store of Value / Currency Token',
      },
      { value: 'Incentive / Reward Token', label: 'Incentive / Reward Token' },
      {
        value: 'Identity / Reputation Token',
        label: 'Identity / Reputation Token',
      },
      { value: 'Asset-Backed Token', label: 'Asset-Backed Token' },
      { value: 'NFT', label: 'NFT' },
      {
        value: 'Hybrid / Multi-Role Token',
        label: 'Hybrid / Multi-Role Token',
      },
    ],
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
    legitimacy: [ALL_METRICS.COMMUNITY_PARTICIPATION],
  },
  token_issuance_mechanism: {
    key: 'token_issuance_mechanism',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Token,
    isEssential: POC_ITEMS.token_issuance_mechanism.isEssential,
    label: 'Token Issuance Mechanism',
    description:
      'Select the token issuance mechanism or specify other mechanism',
    shortDescription: `Describes how new tokens are created and added to the total supply.`,
    longDescription: `The issuance mechanism defines the process by which new tokens are minted and introduced into circulation. This can follow models such as fixed supply, inflationary issuance, emission schedules, or event-triggered minting (e.g. rewards, governance). Understanding the issuance method is essential for evaluating a token’s monetary policy, long-term inflation, and potential dilution of existing holders. Please specify if the mechanism is coded in the token contract and whether it's adjustable or fixed.`,
    weight: ALL_POC_ITEM_MAP.token_issuance_mechanism.weight,
    formDisplayType: 'select',
    placeholder: 'Select issuance mechanism',
    options: [
      { value: 'ICO', label: 'ICO' },
      { value: 'IEO', label: 'IEO' },
      { value: 'IDO', label: 'IDO' },
      { value: 'STO', label: 'STO' },
      { value: 'Airdrop', label: 'Airdrop' },
      { value: 'Mining (pos)', label: 'Mining (pos)' },
      { value: 'Staking (pos)', label: 'Staking (pos)' },
      { value: 'Yield Farming', label: 'Yield Farming' },
      { value: 'Token Vesting & Unlocks', label: 'Token Vesting & Unlocks' },
      { value: 'Token Buyback & Burn', label: 'Token Buyback & Burn' },
      { value: 'Other', label: 'Other (input value)' },
    ],
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
    legitimacy: [
      ALL_METRICS.LEGITIMACY_BY_PERFORMANCE,
      ALL_METRICS.LEGITIMACY_BY_CONTINUITY,
    ],
  },
  token_launch_date: {
    key: 'token_launch_date',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Token,
    isEssential: POC_ITEMS.token_launch_date.isEssential,
    label: 'Token Launch Date',
    description: 'Select the date when the token was or will be launched',
    shortDescription:
      'The date when the token was officially launched or will be launched.',
    weight: ALL_POC_ITEM_MAP.token_launch_date.weight,
    formDisplayType: 'date',
    placeholder: 'Select token launch date',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [],
  },
  total: {
    key: 'total',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.total.isEssential,
    label: 'Total Grants(calc)',
    description:
      'Calculated total from Contributing Funds investment amounts and previous funding amounts',
    shortDescription:
      'Shows all grants the project has received, including amounts, dates, and who issued them.',
    longDescription: `
This field captures a record of grants received by the project — whether from public goods platforms, foundations, DAOs, or private organizations. It includes key data such as the grant giver’s name, the amount granted, and the date it was received. This information helps assess the project’s funding history, external support, and alignment with funding ecosystems. If possible, include links to grant announcements or on-chain records for verification.`,
    weight: ALL_POC_ITEM_MAP.total.weight,
    formDisplayType: 'string',
    placeholder: 'Calculated automatically',
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY],
    legitimacy: [],
  },
  governance_structure: {
    key: 'governance_structure',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Governance,
    isEssential: POC_ITEMS.governance_structure.isEssential,
    label: 'Governance Structure',
    description: 'Select the governance structure or specify other structure',
    shortDescription: `Specify how governance is managed in the Project. Include the name of the DAO, multisig tooling (if any), or off-chain voting system, and a link to the platform or dashboard where proposals and votes take place.
This helps us understand how decisions are made and who gets to participate.`,
    longDescription: `A governance model defines how decisions are made within your project — whether through a DAO, a multisig council, or other mechanisms. In decentralized projects, governance is often coordinated by community members who propose and vote on key actions like treasury spending, protocol upgrades, or team changes. This can happen on-chain (via smart contracts and DAO tooling) or off-chain (using tools like Snapshot or forums, with optional execution layers). If your project uses a governance token, it typically plays a central role in enabling participation and influence.`,
    weight: ALL_POC_ITEM_MAP.governance_structure.weight,
    formDisplayType: 'select',
    placeholder: 'Select governance structure',
    options: [
      { value: 'Board of Directors Model', label: 'Board of Directors Model' },
      { value: 'Shareholder Governance', label: 'Shareholder Governance' },
      { value: 'Executive-Led Governance', label: 'Executive-Led Governance' },
      { value: 'Nonprofit Board-Centric', label: 'Nonprofit Board-Centric' },
      { value: 'Working Board', label: 'Working Board' },
      { value: 'Cooperative Governance', label: 'Cooperative Governance' },
      { value: 'Akasha DAWA', label: 'Akasha DAWA' },
      { value: 'Steering Committee', label: 'Steering Committee' },
      { value: 'Program Governance', label: 'Program Governance' },
      { value: 'Portfolio Governance', label: 'Portfolio Governance' },
      { value: 'Holacracy / Sociocracy', label: 'Holacracy / Sociocracy' },
      { value: 'DAO Governance', label: 'DAO Governance' },
      { value: 'Other', label: 'Other (input value)' },
    ],
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
    legitimacy: [],
  },
  physical_entity: {
    key: 'physical_entity',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Organization,
    isEssential: POC_ITEMS.physical_entity.isEssential,
    label: 'Physical Entity',
    description:
      'Provide legal name and country information for the physical entity',
    shortDescription: `Enter the legal name of the entity behind the project and the country where it is registered or operates.`,
    longDescription: `This field identifies the legal entity or organization responsible for the project, including its official name and country of establishment. It helps determine the legal standing, jurisdiction, and regulatory context in which the project operates. Even if the project is decentralized, many teams choose to set up a legal wrapper (e.g. company, foundation, association) to manage operations, funding, or partnerships. If there is no formal entity, indicate that clearly.`,
    weight: ALL_POC_ITEM_MAP.physical_entity.weight,
    formDisplayType: 'tablePhysicalEntity',
    placeholder: 'Add legal entity information',
    showReference: true,
    showExpand: true,
    accountability: [
      ALL_METRICS.TRANSPARENCY,
      ALL_METRICS.KEY_ACCOUNTABILITY_ITEM,
    ],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
  },
  treasury_vault_address: {
    key: 'treasury_vault_address',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.treasury_vault_address.isEssential,
    label: 'Treasury Vault Address',
    description:
      'Input the treasury vault blockchain address or select N/A if not applicable',
    shortDescription: `The vault address is meant to present the smart contract address where the treasury stored and also the people having the authority to get/approve the access to this address.`,
    longDescription: `It is typically a multisig wallet, a timelocked contract, or a DAO-governed treasury, depending on the project's governance and security setup. This field should include the public address of the vault, and where applicable, information about the individuals, roles, or mechanisms with authority to approve or execute transactions from the vault. In many cases, these may be multisig signers, council members, or smart contract-based executors tied to governance decisions. Vaults may hold funds for operational expenses, grant disbursements, community initiatives, or strategic reserves. Clearly disclosing the vault address and who controls it ensures greater transparency, facilitates external verification, and strengthens trust in the project's financial stewardship.`,
    weight: ALL_POC_ITEM_MAP.treasury_vault_address.weight,
    formDisplayType: 'string',
    placeholder: '0x... or N/A',
    showReference: true,
    showApplicable: true,
    accountability: [
      ALL_METRICS.TRANSPARENCY,
      ALL_METRICS.KEY_ACCOUNTABILITY_ITEM,
    ],
    legitimacy: [ALL_METRICS.LEGITIMACY_BY_PROCESS],
  },
  treasury_mechanism: {
    key: 'treasury_mechanism',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.treasury_mechanism.isEssential,
    label: 'Treasury Mechanism',
    description:
      'Select the treasury management mechanism or specify other mechanism',
    shortDescription: 'Approval voting with a Yes-No-Abstain scheme (?)',
    longDescription: `The core component of a treasury system is a decision-making system that allows members of the community collectively reach some conclusions/decisions.`,
    weight: ALL_POC_ITEM_MAP.treasury_mechanism.weight,
    formDisplayType: 'select',
    placeholder: 'Select treasury mechanism',
    options: [
      { value: 'Multisig Wallet-Based', label: 'Multisig Wallet-Based' },
      { value: 'Governance Voting-Based', label: 'Governance Voting-Based' },
      { value: 'Streaming Treasury', label: 'Streaming Treasury' },
      {
        value: 'Automated Smart Contract Treasury',
        label: 'Automated Smart Contract Treasury',
      },
      {
        value: 'Delegated Treasury Management',
        label: 'Delegated Treasury Management',
      },
      { value: 'Vault-Based Model', label: 'Vault-Based Model' },
      {
        value: 'Treasury-as-a-Service (TaaS)',
        label: 'Treasury-as-a-Service (TaaS)',
      },
      { value: 'Revenue-Linked Model', label: 'Revenue-Linked Model' },
      {
        value: 'Bonding or Buyback Treasury',
        label: 'Bonding or Buyback Treasury',
      },
      {
        value: 'Quadratic Funding Treasury',
        label: 'Quadratic Funding Treasury',
      },
      { value: 'Treasury Mining', label: 'Treasury Mining' },
      { value: 'Other', label: 'Other (input value)' },
      { value: 'N/A', label: 'N/A' },
    ],
    showReference: true,
    accountability: [ALL_METRICS.TRANSPARENCY, ALL_METRICS.PARTICIPATION],
    legitimacy: [],
  },
};
