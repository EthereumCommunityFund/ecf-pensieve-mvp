import { ALL_POC_ITEM_MAP } from '@/lib/constants';
import { POC_ITEMS } from '@/lib/pocItems';
import {
  IItemCategoryEnum,
  IItemConfig,
  IItemKey,
  IItemSubCategoryEnum,
} from '@/types/item';

export const AllItemConfig: Partial<Record<IItemKey, IItemConfig<IItemKey>>> = {
  name: {
    key: 'name',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.name.isEssential,
    label: 'Project Name',
    description: 'type in the name of the project to propose',
    shortDescription: 'The unique identifier for the project.',
    weight: ALL_POC_ITEM_MAP.name.weight,
    formDisplayType: 'string',
    placeholder: 'Type in a name',
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  tagline: {
    key: 'tagline',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.tagline.isEssential,
    label: 'Tagline',
    description:
      'provide a simple short description about this project to display on its card',
    shortDescription: 'A simple and catchy slogan for the project.',
    weight: ALL_POC_ITEM_MAP.tagline.weight,
    formDisplayType: 'string',
    placeholder: 'Type in a tagline',
    showReference: true,
    showExpand: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  categories: {
    key: 'categories',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.categories.isEssential,
    label: 'Categories',
    description:
      'provide a simple short description about this project to display on its card',
    shortDescription: 'Categorize the project into relevant categories.',
    weight: ALL_POC_ITEM_MAP.categories.weight,
    formDisplayType: 'selectMultiple',
    placeholder: 'Select categories',
    options: [
      { value: 'Development', label: 'Development' },
      { value: 'Design', label: 'Design' },
      { value: 'Community', label: 'Community' },
      { value: 'Finance', label: 'Finance' },
      { value: 'Governance', label: 'Governance' },
      { value: 'Data', label: 'Data' },
    ],
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: ['Community Participation'],
  },
  tags: {
    key: 'tags',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.tags.isEssential,
    label: 'Tags',
    description: 'provide a list of tags for this project',
    shortDescription: 'A list of tags for the project.',
    weight: ALL_POC_ITEM_MAP.tags.weight,
    formDisplayType: 'autoComplete',
    placeholder: 'Select tags',
    showReference: true,
    options: [
      { value: 'd/acc', label: 'd/acc' },
      { value: 'Ethereum', label: 'Ethereum' },
      { value: 'Solana', label: 'Solana' },
      { value: 'Polygon', label: 'Polygon' },
      { value: 'Polkadot', label: 'Polkadot' },
      { value: 'Optimism', label: 'Optimism' },
      { value: 'Arbitrum', label: 'Arbitrum' },
      { value: 'ZK Rollup', label: 'ZK Rollup' },
      { value: 'IPFS', label: 'IPFS' },
      { value: 'DID', label: 'DID' },
      { value: 'Wallet', label: 'Wallet' },
      { value: 'ZK', label: 'ZK' },
      { value: 'Privacy', label: 'Privacy' },
      { value: 'Layer 1', label: 'Layer 1' },
      { value: 'Layer 2', label: 'Layer 2' },
      { value: 'AI Integration', label: 'AI Integration' },
      { value: 'Interoperability', label: 'Interoperability' },
      { value: 'Decentralised Storage', label: 'Decentralised Storage' },
      { value: 'Governance', label: 'Governance' },
      { value: 'Funding', label: 'Funding' },
      { value: 'Social', label: 'Social' },
      { value: 'GameFi', label: 'GameFi' },
      { value: 'DeFi', label: 'DeFi' },
      { value: 'NFT', label: 'NFT' },
      { value: 'Education', label: 'Education' },
      { value: 'Open-source', label: 'Open-source' },
      { value: 'Public goods', label: 'Public goods' },
    ],
    accountability: ['Transparency'],
    legitimacy: [],
  },
  mainDescription: {
    key: 'mainDescription',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.mainDescription.isEssential,
    label: 'Main Description',
    description: 'provide a longer description about this project in detail',
    shortDescription: 'A comprehensive description of the project.',
    weight: ALL_POC_ITEM_MAP.mainDescription.weight,
    formDisplayType: 'textarea',
    placeholder: 'Type in a description',
    minRows: 4,
    showReference: true,
    showExpand: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  logoUrl: {
    key: 'logoUrl',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.logoUrl.isEssential,
    label: 'Project Logo',
    description: 'provide a logo for this project',
    shortDescription: 'The visual logo of the project.',
    weight: ALL_POC_ITEM_MAP.logoUrl.weight,
    placeholder: '',
    formDisplayType: 'img',
    showReference: true,
    accountability: [],
    legitimacy: [],
  },
  websiteUrl: {
    key: 'websiteUrl',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.websiteUrl.isEssential,
    label: 'Project Website',
    description: 'provide the main website for this project',
    shortDescription: 'The main online address of the project.',
    weight: ALL_POC_ITEM_MAP.websiteUrl.weight,
    formDisplayType: 'link',
    placeholder: 'Type in a URL',
    startContentText: 'https://',
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  appUrl: {
    key: 'appUrl',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.appUrl.isEssential,
    label: 'App URL',
    description: 'provide the main application URL for this project',
    shortDescription:
      'The direct link to the project application (if different from the website).',
    weight: ALL_POC_ITEM_MAP.appUrl.weight,
    formDisplayType: 'link',
    placeholder: 'Type in a URL',
    startContentText: 'https://',
    showApplicable: true,
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  whitePaper: {
    key: 'whitePaper',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.whitePaper.isEssential,
    label: 'White Paper',
    description: 'provide the white paper for this project',
    shortDescription: 'The white paper of the project.',
    weight: ALL_POC_ITEM_MAP.whitePaper.weight,
    formDisplayType: 'link',
    placeholder: 'Type in a URL',
    startContentText: 'https://',
    showApplicable: true,
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: ['Legitimacy by Process'],
  },
  dateFounded: {
    key: 'dateFounded',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.dateFounded.isEssential,
    label: 'Date Founded',
    description: 'Select the date at which the project was founded.',
    shortDescription: 'The date when the project officially began.',
    weight: ALL_POC_ITEM_MAP.dateFounded.weight,
    formDisplayType: 'date',
    placeholder: 'Select date',
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  dateLaunch: {
    key: 'dateLaunch',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.dateLaunch.isEssential,
    label: 'Product Launch Date',
    description:
      'Select the date when the main product or service was launched (if applicable).',
    shortDescription:
      'The date when the product was first released to the public.',
    weight: ALL_POC_ITEM_MAP.dateLaunch.weight,
    formDisplayType: 'date',
    placeholder: 'Select date',
    showApplicable: true,
    showReference: true,
    accountability: ['Transparency', 'Performance Eval'],
    legitimacy: [],
  },
  devStatus: {
    key: 'devStatus',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.devStatus.isEssential,
    label: 'Development Status',
    description: 'Select the current status of their development',
    shortDescription: 'The most recent development status of the project.',
    weight: ALL_POC_ITEM_MAP.devStatus.weight,
    formDisplayType: 'select',
    placeholder: 'Select status',
    options: [
      { value: 'Idea/Whitepaper', label: 'Idea/Whitepaper' },
      { value: 'Prototype', label: 'Prototype' },
      { value: 'In Development', label: 'In Development' },
      { value: 'Alpha', label: 'Alpha' },
      { value: 'Beta', label: 'Beta' },
      { value: 'Live', label: 'Live (working product)' },
      { value: 'Broken/Abandoned', label: 'Broken / Abandoned' },
      { value: 'Concept', label: 'Concept' },
      { value: 'Stealth', label: 'Stealth' },
    ],
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  openSource: {
    key: 'openSource',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.openSource.isEssential,
    label: 'Open-Source?',
    description: 'Is this project now open-source?',
    shortDescription: 'Whether the project follows an open-source model.',
    placeholder: 'Select open-source status',
    weight: ALL_POC_ITEM_MAP.openSource.weight,
    formDisplayType: 'select',
    options: [
      { value: 'Yes', label: 'Yes' },
      { value: 'No', label: 'No' },
    ],
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  codeRepo: {
    key: 'codeRepo',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.codeRepo.isEssential,
    label: 'Code Repository',
    description: 'Provide a URL to their repository',
    shortDescription: 'The repository link hosting the project source code.',
    weight: ALL_POC_ITEM_MAP.codeRepo.weight,
    formDisplayType: 'link',
    placeholder: 'https://github.com/your-org/repo',
    startContentText: 'https://',
    showApplicable: true,
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  dappSmartContracts: {
    key: 'dappSmartContracts',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.dappSmartContracts.isEssential,
    label: 'Dapp Smart Contracts',
    description: 'Input the projects smart contracts',
    shortDescription: 'The smart contracts of the project.',
    weight: ALL_POC_ITEM_MAP.dappSmartContracts.weight,
    formDisplayType: 'stringMultiple',
    placeholder: '0x...',
    showReference: true,
    showApplicable: true,
    showExpand: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  orgStructure: {
    key: 'orgStructure',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Organization,
    isEssential: POC_ITEMS.orgStructure.isEssential,
    label: 'Organization Structure',
    description: 'With what structure does this project operate?',
    shortDescription: 'The organizational and governance model of the project.',
    weight: ALL_POC_ITEM_MAP.orgStructure.weight,
    formDisplayType: 'select',
    placeholder: 'Select structure',
    options: [
      { value: 'Centralized', label: 'Centralized' },
      { value: 'DAO', label: 'DAO' },
      { value: 'Decentralized', label: 'Decentralized' },
    ],
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  publicGoods: {
    key: 'publicGoods',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Organization,
    isEssential: POC_ITEMS.publicGoods.isEssential,
    label: 'Public-Goods Nature',
    description: 'Is this project a public good?',
    shortDescription: 'Whether the project contributes to the public domain.',
    weight: ALL_POC_ITEM_MAP.publicGoods.weight,
    placeholder: 'Select public goods',
    formDisplayType: 'select',
    options: [
      { value: 'Yes', label: 'Yes' },
      { value: 'No', label: 'No' },
    ],
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  founders: {
    key: 'founders',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Team,
    isEssential: POC_ITEMS.founders.isEssential,
    label: 'Founders',
    description:
      'Provide the founders of this project (minimum of 1 founder is required)',
    shortDescription: 'The list of founding team members of the project.',
    placeholder: 'Add a founder',
    weight: ALL_POC_ITEM_MAP.founders.weight,
    formDisplayType: 'founderList',
    showReference: true,
    showExpand: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  fundingStatus: {
    key: 'fundingStatus',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.fundingStatus.isEssential,
    label: 'Funding Status',
    description: 'Select the current status of their funding phase',
    shortDescription: 'The sources and status of project funding.',
    weight: ALL_POC_ITEM_MAP.fundingStatus.weight,
    formDisplayType: 'select',
    placeholder: 'Select funding status',
    showApplicable: true,
    options: [
      { value: 'Funded', label: 'Funded' },
      { value: 'VC Invested', label: 'VC Invested' },
      { value: 'No Funding', label: 'No Funding' },
    ],
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  tokenContract: {
    key: 'tokenContract',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Token,
    isEssential: POC_ITEMS.tokenContract.isEssential,
    label: 'Token Contract',
    description: 'Input the projects token contract address',
    shortDescription:
      'The contract address of the project token on the blockchain.',
    weight: ALL_POC_ITEM_MAP.tokenContract.weight,
    formDisplayType: 'string',
    placeholder: '0x...',
    showReference: true,
    showApplicable: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },

  adoption_plan: {
    key: 'adoption_plan',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.adoption_plan.isEssential,
    label: 'Adoption Plan',
    description: 'Provide the adoption plan for this project',
    shortDescription:
      'The plan for the project to be adopted by the community.',
    weight: ALL_POC_ITEM_MAP.adoption_plan.weight,
    formDisplayType: 'string',
    placeholder: 'Type in a plan',
    showReference: true,
    showExpand: true,
    accountability: ['Participation', 'Performance Eval'],
    legitimacy: ['Community Acceptance'],
  },
  launch_plan: {
    key: 'launch_plan',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.launch_plan.isEssential,
    label: 'Launch Plan',
    description: 'Provide the launch plan for this project',
    shortDescription:
      'The plan for the project to be launched by the community.',
    weight: ALL_POC_ITEM_MAP.launch_plan.weight,
    formDisplayType: 'string',
    placeholder: 'Type in a plan',
    showReference: true,
    showExpand: true,
    accountability: ['Transparency', 'Performance Eval'],
    legitimacy: ['Community Acceptance'],
  },
  roadmap: {
    key: 'roadmap',
    category: IItemCategoryEnum.Basics,
    subCategory: IItemSubCategoryEnum.BasicProfile,
    isEssential: POC_ITEMS.roadmap.isEssential,
    label: 'Roadmap',
    description: 'Provide the roadmap for this project',
    shortDescription:
      'The roadmap for the project to be adopted by the community.',
    weight: ALL_POC_ITEM_MAP.roadmap.weight,
    formDisplayType: 'textarea',
    placeholder: 'Type in a roadmap',
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  audit_status: {
    key: 'audit_status',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.audit_status.isEssential,
    label: 'Audit Status',
    description: 'Select the current status of their audit',
    shortDescription: 'The most recent audit status of the project.',
    weight: ALL_POC_ITEM_MAP.audit_status.weight,
    formDisplayType: 'textarea',
    placeholder: 'Type status',
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: ['Legitimacy by Process'],
  },
  dapp_category: {
    key: 'dapp_category',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.dapp_category.isEssential,
    label: 'Dapp Category',
    description: 'Select the category that best describes this dapp',
    shortDescription: 'The primary category classification of the dapp.',
    weight: ALL_POC_ITEM_MAP.dapp_category.weight,
    formDisplayType: 'select',
    placeholder: 'Select category',
    options: [
      { value: 'DeFi', label: 'DeFi' },
      { value: 'NFTs', label: 'NFTs' },
      { value: 'Social', label: 'Social' },
      { value: 'Identity', label: 'Identity' },
      { value: 'DAOs & Governance', label: 'DAOs & Governance' },
      { value: 'Gaming', label: 'Gaming' },
      { value: 'Public Goods', label: 'Public Goods' },
      { value: 'Education', label: 'Education' },
      { value: 'Tooling', label: 'Tooling' },
      { value: 'Commerce & Marketplace', label: 'Commerce & Marketplace' },
      { value: 'Community', label: 'Community' },
      { value: 'Privacy & Security', label: 'Privacy & Security' },
    ],
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: ['Legitimacy by Performance'],
  },
  protocol_built_on: {
    key: 'protocol_built_on',
    category: IItemCategoryEnum.Technicals,
    subCategory: IItemSubCategoryEnum.Development,
    isEssential: POC_ITEMS.protocol_built_on.isEssential,
    label: 'Protocol Built On',
    description:
      'Specify the underlying protocol or blockchain this project is built on',
    shortDescription: 'The underlying protocol or blockchain platform.',
    weight: ALL_POC_ITEM_MAP.protocol_built_on.weight,
    formDisplayType: 'string',
    placeholder: 'Type protocol name (e.g., Ethereum, Polygon, Solana)',
    showReference: true,
    accountability: ['Transparency', 'Performance Eval', 'Participation'],
    legitimacy: ['Legitimacy by Process'],
  },
  core_team: {
    key: 'core_team',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Team,
    isEssential: POC_ITEMS.core_team.isEssential,
    label: 'Core Team',
    description:
      'Provide the core team members of this project with their names and roles',
    shortDescription:
      'The list of core team members and their roles in the project.',
    weight: ALL_POC_ITEM_MAP.core_team.weight,
    formDisplayType: 'founderList',
    placeholder: 'Add a team member',
    showReference: true,
    showExpand: true,
    accountability: ['Transparency', 'Participation'],
    legitimacy: [],
  },
  team_incentives: {
    key: 'team_incentives',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Team,
    isEssential: POC_ITEMS.team_incentives.isEssential,
    label: 'Team Incentives',
    description:
      'Describe the incentive structure and compensation model for the team',
    shortDescription:
      'The incentive and compensation structure for team members.',
    weight: ALL_POC_ITEM_MAP.team_incentives.weight,
    formDisplayType: 'textarea',
    placeholder: 'Describe team incentives and compensation structure',
    minRows: 3,
    showReference: true,
    accountability: ['Transparency', 'Participation'],
    legitimacy: [],
  },
  ownership_of_project: {
    key: 'ownership_of_project',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Team,
    isEssential: POC_ITEMS.ownership_of_project.isEssential,
    label: 'Ownership of Project',
    description:
      'Describe the ownership structure and distribution of the project',
    shortDescription:
      'The ownership structure and distribution model of the project.',
    weight: ALL_POC_ITEM_MAP.ownership_of_project.weight,
    formDisplayType: 'textarea',
    placeholder: 'Describe project ownership structure and distribution',
    minRows: 3,
    showReference: true,
    showExpand: true,
    accountability: ['Transparency', 'Participation'],
    legitimacy: [],
  },
  project_funded_date: {
    key: 'project_funded_date',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.project_funded_date.isEssential,
    label: 'Project Funded Date',
    description: 'Select the date when the project received funding',
    shortDescription: 'The date when the project was officially funded.',
    weight: ALL_POC_ITEM_MAP.project_funded_date.weight,
    formDisplayType: 'date',
    placeholder: 'Select funding date',
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: ['Legitimacy by Performance'],
  },
  // total_grants: {
  //   key: 'total_grants',
  //   category: IItemCategoryEnum.Financial,
  //   subCategory: IItemSubCategoryEnum.Finances,
  //   isEssential: POC_ITEMS.total_grants.isEssential,
  //   label: 'Total Grants (calc)',
  //   description: 'Calculated total from Contributing Funds grant amounts and previous funding/grant amounts',
  //   shortDescription: 'Automatically calculated total grant amount from all funding sources.',
  //   weight: ALL_POC_ITEM_MAP.total_grants.weight,
  //   formDisplayType: 'string',
  //   placeholder: 'Calculated automatically',
  //   showReference: true,
  // },
  budget_plans: {
    key: 'budget_plans',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.budget_plans.isEssential,
    label: 'Budget Plans',
    description:
      'Provide a link to the project budget plans and financial projections',
    shortDescription:
      'Link to detailed budget plans and financial projections.',
    weight: ALL_POC_ITEM_MAP.budget_plans.weight,
    formDisplayType: 'link',
    placeholder: 'Type in a URL',
    startContentText: 'https://',
    showReference: true,
    accountability: ['Transparency', 'Performance Eval'],
    legitimacy: [],
  },
  expense_statements: {
    key: 'expense_statements',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.expense_statements.isEssential,
    label: 'Expense Statements',
    description:
      'Provide a link to the project expense statements and financial records',
    shortDescription: 'Link to expense statements and financial records.',
    weight: ALL_POC_ITEM_MAP.expense_statements.weight,
    formDisplayType: 'link',
    placeholder: 'Type in a URL',
    startContentText: 'https://',
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: ['Legitimacy by Performance'],
  },
  runway: {
    key: 'runway',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.runway.isEssential,
    label: 'Runway',
    description: 'Specify the project runway in months or currency amount',
    shortDescription:
      'The estimated time or amount the project can operate with current funding.',
    weight: ALL_POC_ITEM_MAP.runway.weight,
    formDisplayType: 'string',
    placeholder: 'e.g., 12 months or $100,000',
    showReference: true,
    accountability: ['Transparency', 'Performance Eval'],
    legitimacy: ['Legitimacy by Performance'],
  },
  income_and_revenue_statements: {
    key: 'income_and_revenue_statements',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.income_and_revenue_statements.isEssential,
    label: 'Income & Revenue Statements',
    description:
      'Provide links to income and revenue statements with labels for multiple entries',
    shortDescription:
      'Links to income and revenue statements with descriptive labels.',
    weight: ALL_POC_ITEM_MAP.income_and_revenue_statements.weight,
    formDisplayType: 'stringMultiple',
    placeholder: 'Add income/revenue statement URL',
    showReference: true,
    accountability: [
      'Transparency',
      'Performance Eval',
      'Key Accountability Item',
    ],
    legitimacy: [],
  },
  token_sales: {
    key: 'token_sales',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Token,
    isEssential: POC_ITEMS.token_sales.isEssential,
    label: 'Token Sales',
    description:
      'Indicate whether the project has conducted or plans to conduct token sales',
    shortDescription: 'Whether the project has or plans token sales.',
    weight: ALL_POC_ITEM_MAP.token_sales.weight,
    formDisplayType: 'select',
    placeholder: 'Select token sales status',
    options: [
      { value: 'Yes', label: 'Yes' },
      { value: 'No', label: 'No' },
      { value: 'N/A', label: 'N/A' },
    ],
    showReference: true,
    accountability: ['Transparency', 'Key Accountability Item'],
    legitimacy: ['Legitimacy by Process'],
  },
  token_type: {
    key: 'token_type',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Token,
    isEssential: POC_ITEMS.token_type.isEssential,
    label: 'Token Type',
    description: 'Select the type of token or specify other type',
    shortDescription: 'The classification and type of the project token.',
    weight: ALL_POC_ITEM_MAP.token_type.weight,
    formDisplayType: 'select',
    placeholder: 'Select token type',
    options: [
      { value: 'Access Token', label: 'Access Token' },
      { value: 'Governance Token', label: 'Governance Token' },
      {
        value: 'Store of Value / Currency Token',
        label: 'Store of Value / Currency Token',
      },
      { value: 'Incentive / Reward Token', label: 'Incentive / Reward Token' },
      {
        value: 'Identity / Reputation Token',
        label: 'Identity / Reputation Token',
      },
      { value: 'Asset-Backed Token', label: 'Asset-Backed Token' },
      { value: 'NFT', label: 'NFT' },
      {
        value: 'Hybrid / Multi-Role Token',
        label: 'Hybrid / Multi-Role Token',
      },
      { value: 'Other', label: 'Other (input value)' },
    ],
    showReference: true,
    accountability: ['Transparency', 'Participation'],
    legitimacy: ['Community Participation'],
  },
  token_issuance_mechanism: {
    key: 'token_issuance_mechanism',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Token,
    isEssential: POC_ITEMS.token_issuance_mechanism.isEssential,
    label: 'Token Issuance Mechanism',
    description:
      'Select the token issuance mechanism or specify other mechanism',
    shortDescription: 'The mechanism used for issuing and distributing tokens.',
    weight: ALL_POC_ITEM_MAP.token_issuance_mechanism.weight,
    formDisplayType: 'select',
    placeholder: 'Select issuance mechanism',
    options: [
      { value: 'ICO', label: 'ICO' },
      { value: 'IEO', label: 'IEO' },
      { value: 'IDO', label: 'IDO' },
      { value: 'STO', label: 'STO' },
      { value: 'Airdrop', label: 'Airdrop' },
      { value: 'Mining (PoS)', label: 'Mining (PoS)' },
      { value: 'Staking (PoS)', label: 'Staking (PoS)' },
      { value: 'Yield Farming', label: 'Yield Farming' },
      { value: 'Token Vesting & Unlocks', label: 'Token Vesting & Unlocks' },
      { value: 'Token Buyback & Burn', label: 'Token Buyback & Burn' },
      { value: 'Other', label: 'Other (input value)' },
    ],
    showReference: true,
    accountability: ['Transparency', 'Participation'],
    legitimacy: ['Legitimacy by Performance', 'Legitimacy by Continuity'],
  },
  token_launch_date: {
    key: 'token_launch_date',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Token,
    isEssential: POC_ITEMS.token_launch_date.isEssential,
    label: 'Token Launch Date',
    description: 'Select the date when the token was or will be launched',
    shortDescription:
      'The date when the token was officially launched or will be launched.',
    weight: ALL_POC_ITEM_MAP.token_launch_date.weight,
    formDisplayType: 'date',
    placeholder: 'Select token launch date',
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  total: {
    key: 'total',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.total.isEssential,
    label: 'Total Investment (calc)',
    description:
      'Calculated total from Contributing Funds investment amounts and previous funding amounts',
    shortDescription:
      'Automatically calculated total investment amount from all funding sources.',
    weight: ALL_POC_ITEM_MAP.total.weight,
    formDisplayType: 'string',
    placeholder: 'Calculated automatically',
    showReference: true,
    accountability: ['Transparency'],
    legitimacy: [],
  },
  governance_structure: {
    key: 'governance_structure',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Governance,
    isEssential: POC_ITEMS.governance_structure.isEssential,
    label: 'Governance Structure',
    description: 'Select the governance structure or specify other structure',
    shortDescription:
      'The governance model and decision-making structure of the project.',
    weight: ALL_POC_ITEM_MAP.governance_structure.weight,
    formDisplayType: 'select',
    placeholder: 'Select governance structure',
    options: [
      { value: 'Board of Directors Model', label: 'Board of Directors Model' },
      { value: 'Shareholder Governance', label: 'Shareholder Governance' },
      { value: 'Executive-Led Governance', label: 'Executive-Led Governance' },
      { value: 'Nonprofit Board-Centric', label: 'Nonprofit Board-Centric' },
      { value: 'Working Board', label: 'Working Board' },
      { value: 'Cooperative Governance', label: 'Cooperative Governance' },
      { value: 'Akasha DAWA', label: 'Akasha DAWA' },
      { value: 'Steering Committee', label: 'Steering Committee' },
      { value: 'Program Governance', label: 'Program Governance' },
      { value: 'Portfolio Governance', label: 'Portfolio Governance' },
      { value: 'Holacracy / Sociocracy', label: 'Holacracy / Sociocracy' },
      { value: 'DAO Governance', label: 'DAO Governance' },
      { value: 'Other', label: 'Other (input value)' },
    ],
    showReference: true,
    accountability: ['Transparency', 'Participation'],
    legitimacy: [],
  },
  physical_entity: {
    key: 'physical_entity',
    category: IItemCategoryEnum.Organization,
    subCategory: IItemSubCategoryEnum.Organization,
    isEssential: POC_ITEMS.physical_entity.isEssential,
    label: 'Physical Entity',
    description:
      'Provide legal name and country information for the physical entity',
    shortDescription:
      'Legal entity information including name and jurisdiction.',
    weight: ALL_POC_ITEM_MAP.physical_entity.weight,
    formDisplayType: 'stringMultiple',
    placeholder: 'Add legal entity information',
    showReference: true,
    accountability: ['Transparency', 'Key Accountability Item'],
    legitimacy: ['Legitimacy by Process'],
  },
  treasury_vault_address: {
    key: 'treasury_vault_address',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.treasury_vault_address.isEssential,
    label: 'Treasury Vault Address',
    description:
      'Input the treasury vault blockchain address or select N/A if not applicable',
    shortDescription: 'The blockchain address of the project treasury vault.',
    weight: ALL_POC_ITEM_MAP.treasury_vault_address.weight,
    formDisplayType: 'string',
    placeholder: '0x... or N/A',
    showReference: true,
    showApplicable: true,
    accountability: ['Transparency', 'Key Accountability Item'],
    legitimacy: ['Legitimacy by Process'],
  },
  treasury_mechanism: {
    key: 'treasury_mechanism',
    category: IItemCategoryEnum.Financial,
    subCategory: IItemSubCategoryEnum.Finances,
    isEssential: POC_ITEMS.treasury_mechanism.isEssential,
    label: 'Treasury Mechanism',
    description:
      'Select the treasury management mechanism or specify other mechanism',
    shortDescription:
      'The mechanism used for managing and operating the project treasury.',
    weight: ALL_POC_ITEM_MAP.treasury_mechanism.weight,
    formDisplayType: 'select',
    placeholder: 'Select treasury mechanism',
    options: [
      { value: 'Multisig Wallet-Based', label: 'Multisig Wallet-Based' },
      { value: 'Governance Voting-Based', label: 'Governance Voting-Based' },
      { value: 'Streaming Treasury', label: 'Streaming Treasury' },
      {
        value: 'Automated Smart Contract Treasury',
        label: 'Automated Smart Contract Treasury',
      },
      {
        value: 'Delegated Treasury Management',
        label: 'Delegated Treasury Management',
      },
      { value: 'Vault-Based Model', label: 'Vault-Based Model' },
      {
        value: 'Treasury-as-a-Service (TaaS)',
        label: 'Treasury-as-a-Service (TaaS)',
      },
      { value: 'Revenue-Linked Model', label: 'Revenue-Linked Model' },
      {
        value: 'Bonding or Buyback Treasury',
        label: 'Bonding or Buyback Treasury',
      },
      {
        value: 'Quadratic Funding Treasury',
        label: 'Quadratic Funding Treasury',
      },
      { value: 'Treasury Mining', label: 'Treasury Mining' },
      { value: 'Other', label: 'Other (input value)' },
      { value: 'N/A', label: 'N/A' },
    ],
    showReference: true,
    accountability: ['Transparency', 'Participation'],
    legitimacy: [],
  },
};
